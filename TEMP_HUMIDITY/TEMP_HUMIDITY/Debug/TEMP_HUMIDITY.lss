
TEMP_HUMIDITY.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  0000148a  0000151e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000148a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  0080010a  0080010a  00001528  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001528  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001584  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  000015c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000dfe  00000000  00000000  00001628  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a76  00000000  00000000  00002426  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006cc  00000000  00000000  00002e9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000108  00000000  00000000  00003568  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000055b  00000000  00000000  00003670  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000488  00000000  00000000  00003bcb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  00004053  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__ctors_end>
       4:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__bad_interrupt>
       8:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__bad_interrupt>
       c:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__bad_interrupt>
      10:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__bad_interrupt>
      14:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__bad_interrupt>
      18:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__bad_interrupt>
      1c:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__bad_interrupt>
      20:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__bad_interrupt>
      24:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__bad_interrupt>
      28:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <__vector_10>
      2c:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__bad_interrupt>
      30:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__bad_interrupt>
      34:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__bad_interrupt>
      38:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__bad_interrupt>
      3c:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__bad_interrupt>
      40:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__bad_interrupt>
      44:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__bad_interrupt>
      48:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__bad_interrupt>
      4c:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__bad_interrupt>
      50:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__bad_interrupt>
      54:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__bad_interrupt>
      58:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__bad_interrupt>
      5c:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__bad_interrupt>
      60:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__bad_interrupt>
      64:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__bad_interrupt>
      68:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__bad_interrupt>
      6c:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__bad_interrupt>
      70:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__bad_interrupt>
      74:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__bad_interrupt>
      78:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__bad_interrupt>
      7c:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__bad_interrupt>
      80:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__bad_interrupt>
      84:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__bad_interrupt>
      88:	0c 94 e4 00 	jmp	0x1c8	; 0x1c8 <__bad_interrupt>

0000008c <__trampolines_end>:
      8c:	6e 61       	ori	r22, 0x1E	; 30
      8e:	6e 00       	.word	0x006e	; ????

00000090 <__c.2332>:
      90:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      a0:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      b0:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      c0:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      d0:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      e0:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      f0:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     100:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     110:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     120:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     130:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     140:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     150:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     160:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     170:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     180:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000018e <__ctors_end>:
     18e:	11 24       	eor	r1, r1
     190:	1f be       	out	0x3f, r1	; 63
     192:	cf ef       	ldi	r28, 0xFF	; 255
     194:	d0 e1       	ldi	r29, 0x10	; 16
     196:	de bf       	out	0x3e, r29	; 62
     198:	cd bf       	out	0x3d, r28	; 61

0000019a <__do_copy_data>:
     19a:	11 e0       	ldi	r17, 0x01	; 1
     19c:	a0 e0       	ldi	r26, 0x00	; 0
     19e:	b1 e0       	ldi	r27, 0x01	; 1
     1a0:	ea e8       	ldi	r30, 0x8A	; 138
     1a2:	f4 e1       	ldi	r31, 0x14	; 20
     1a4:	02 c0       	rjmp	.+4      	; 0x1aa <__do_copy_data+0x10>
     1a6:	05 90       	lpm	r0, Z+
     1a8:	0d 92       	st	X+, r0
     1aa:	aa 30       	cpi	r26, 0x0A	; 10
     1ac:	b1 07       	cpc	r27, r17
     1ae:	d9 f7       	brne	.-10     	; 0x1a6 <__do_copy_data+0xc>

000001b0 <__do_clear_bss>:
     1b0:	21 e0       	ldi	r18, 0x01	; 1
     1b2:	aa e0       	ldi	r26, 0x0A	; 10
     1b4:	b1 e0       	ldi	r27, 0x01	; 1
     1b6:	01 c0       	rjmp	.+2      	; 0x1ba <.do_clear_bss_start>

000001b8 <.do_clear_bss_loop>:
     1b8:	1d 92       	st	X+, r1

000001ba <.do_clear_bss_start>:
     1ba:	ac 31       	cpi	r26, 0x1C	; 28
     1bc:	b2 07       	cpc	r27, r18
     1be:	e1 f7       	brne	.-8      	; 0x1b8 <.do_clear_bss_loop>
     1c0:	0e 94 3c 01 	call	0x278	; 0x278 <main>
     1c4:	0c 94 43 0a 	jmp	0x1486	; 0x1486 <_exit>

000001c8 <__bad_interrupt>:
     1c8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001cc <__vector_10>:
volatile uint8_t data[SEGMENT_NUM] = {0, 0 , 0 , 0};
uint8_t idx = 0;
uint16_t num = 0 , seconds = 0;
volatile uint8_t flag = 0;
/*****************************/
ISR(TIMER2_OVF_vect){
     1cc:	1f 92       	push	r1
     1ce:	0f 92       	push	r0
     1d0:	0f b6       	in	r0, 0x3f	; 63
     1d2:	0f 92       	push	r0
     1d4:	11 24       	eor	r1, r1
     1d6:	2f 93       	push	r18
     1d8:	8f 93       	push	r24
     1da:	9f 93       	push	r25
     1dc:	ef 93       	push	r30
     1de:	ff 93       	push	r31
	PORTA = DP;
     1e0:	80 e8       	ldi	r24, 0x80	; 128
     1e2:	8b bb       	out	0x1b, r24	; 27
	PORTC = ~( 1 << idx);
     1e4:	81 e0       	ldi	r24, 0x01	; 1
     1e6:	90 e0       	ldi	r25, 0x00	; 0
     1e8:	00 90 0f 01 	lds	r0, 0x010F	; 0x80010f <idx>
     1ec:	02 c0       	rjmp	.+4      	; 0x1f2 <__vector_10+0x26>
     1ee:	88 0f       	add	r24, r24
     1f0:	99 1f       	adc	r25, r25
     1f2:	0a 94       	dec	r0
     1f4:	e2 f7       	brpl	.-8      	; 0x1ee <__vector_10+0x22>
     1f6:	80 95       	com	r24
     1f8:	85 bb       	out	0x15, r24	; 21
	PORTA = seven_seg[ data[idx]  ];
     1fa:	e0 91 0f 01 	lds	r30, 0x010F	; 0x80010f <idx>
     1fe:	f0 e0       	ldi	r31, 0x00	; 0
     200:	e0 5f       	subi	r30, 0xF0	; 240
     202:	fe 4f       	sbci	r31, 0xFE	; 254
     204:	e0 81       	ld	r30, Z
     206:	f0 e0       	ldi	r31, 0x00	; 0
     208:	e0 50       	subi	r30, 0x00	; 0
     20a:	ff 4f       	sbci	r31, 0xFF	; 255
     20c:	80 81       	ld	r24, Z
     20e:	8b bb       	out	0x1b, r24	; 27
	idx = (idx + 1 ) % SEGMENT_NUM;
     210:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <idx>
     214:	90 e0       	ldi	r25, 0x00	; 0
     216:	01 96       	adiw	r24, 0x01	; 1
     218:	83 70       	andi	r24, 0x03	; 3
     21a:	90 78       	andi	r25, 0x80	; 128
     21c:	99 23       	and	r25, r25
     21e:	24 f4       	brge	.+8      	; 0x228 <__vector_10+0x5c>
     220:	01 97       	sbiw	r24, 0x01	; 1
     222:	8c 6f       	ori	r24, 0xFC	; 252
     224:	9f 6f       	ori	r25, 0xFF	; 255
     226:	01 96       	adiw	r24, 0x01	; 1
     228:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <idx>
	num++;
     22c:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <num>
     230:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <num+0x1>
     234:	01 96       	adiw	r24, 0x01	; 1
     236:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <num+0x1>
     23a:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <num>
	if( num == 500){
     23e:	84 3f       	cpi	r24, 0xF4	; 244
     240:	91 40       	sbci	r25, 0x01	; 1
     242:	81 f4       	brne	.+32     	; 0x264 <__vector_10+0x98>
		flag = 1;
     244:	81 e0       	ldi	r24, 0x01	; 1
     246:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__data_end>
		seconds++;
     24a:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <seconds>
     24e:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <seconds+0x1>
     252:	01 96       	adiw	r24, 0x01	; 1
     254:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <seconds+0x1>
     258:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <seconds>
		num = 0;
     25c:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <num+0x1>
     260:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <num>
	}
}
     264:	ff 91       	pop	r31
     266:	ef 91       	pop	r30
     268:	9f 91       	pop	r25
     26a:	8f 91       	pop	r24
     26c:	2f 91       	pop	r18
     26e:	0f 90       	pop	r0
     270:	0f be       	out	0x3f, r0	; 63
     272:	0f 90       	pop	r0
     274:	1f 90       	pop	r1
     276:	18 95       	reti

00000278 <main>:
	}
}
#endif
/****************************/
int main(void)
{
     278:	cf 93       	push	r28
     27a:	df 93       	push	r29
     27c:	00 d0       	rcall	.+0      	; 0x27e <main+0x6>
     27e:	1f 92       	push	r1
     280:	cd b7       	in	r28, 0x3d	; 61
     282:	de b7       	in	r29, 0x3e	; 62
	DDRE = (1 << 5);
     284:	80 e2       	ldi	r24, 0x20	; 32
     286:	82 b9       	out	0x02, r24	; 2
    DDRA = 0xff;
     288:	8f ef       	ldi	r24, 0xFF	; 255
     28a:	8a bb       	out	0x1a, r24	; 26
	PORTA = DP;
     28c:	80 e8       	ldi	r24, 0x80	; 128
     28e:	8b bb       	out	0x1b, r24	; 27
	PORTC = 0x0f;
     290:	8f e0       	ldi	r24, 0x0F	; 15
     292:	85 bb       	out	0x15, r24	; 21
	DDRC = 0x0f;
     294:	84 bb       	out	0x14, r24	; 20
	// Clock source: System Clock
	// Clock value: 125.000 kHz
	// Mode: Normal top=0xFF
	// OC2 output: Disconnected
	// Timer Period: 2.048 ms
	TCCR2=(0<<WGM20) | (0<<COM21) | (0<<COM20) | (0<<WGM21) | (0<<CS22) | (1<<CS21) | (1<<CS20);
     296:	83 e0       	ldi	r24, 0x03	; 3
     298:	85 bd       	out	0x25, r24	; 37
	TCNT2=0x00;
     29a:	14 bc       	out	0x24, r1	; 36
	OCR2=0x00;
     29c:	13 bc       	out	0x23, r1	; 35
	// Timer(s)/Counter(s) Interrupt(s) initialization
	TIMSK=(0<<OCIE2) | (1<<TOIE2) | (0<<TICIE1) | (1<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
     29e:	81 e5       	ldi	r24, 0x51	; 81
     2a0:	87 bf       	out	0x37, r24	; 55
	ETIMSK=(0<<TICIE3) | (0<<OCIE3A) | (0<<OCIE3B) | (0<<TOIE3) | (0<<OCIE3C) | (0<<OCIE1C);
     2a2:	10 92 7d 00 	sts	0x007D, r1	; 0x80007d <__TEXT_REGION_LENGTH__+0x7f007d>
	UBRR1H=0x00;
	UBRR1L=0x08;
	#endif

	uint8_t buff[3];
	buff[0] = 0xe6;
     2a6:	86 ee       	ldi	r24, 0xE6	; 230
     2a8:	89 83       	std	Y+1, r24	; 0x01
	buff[1] = 0xBB;
     2aa:	8b eb       	ldi	r24, 0xBB	; 187
     2ac:	8a 83       	std	Y+2, r24	; 0x02
	tw_init(TW_FREQ_100K , 0);
     2ae:	60 e0       	ldi	r22, 0x00	; 0
     2b0:	80 e0       	ldi	r24, 0x00	; 0
     2b2:	0e 94 77 02 	call	0x4ee	; 0x4ee <tw_init>
	tw_master_transmit(0x40, buff , 2 , 0 );
     2b6:	20 e0       	ldi	r18, 0x00	; 0
     2b8:	42 e0       	ldi	r20, 0x02	; 2
     2ba:	be 01       	movw	r22, r28
     2bc:	6f 5f       	subi	r22, 0xFF	; 255
     2be:	7f 4f       	sbci	r23, 0xFF	; 255
     2c0:	80 e4       	ldi	r24, 0x40	; 64
     2c2:	0e 94 98 02 	call	0x530	; 0x530 <tw_master_transmit>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2c6:	8f e1       	ldi	r24, 0x1F	; 31
     2c8:	9e e4       	ldi	r25, 0x4E	; 78
     2ca:	01 97       	sbiw	r24, 0x01	; 1
     2cc:	f1 f7       	brne	.-4      	; 0x2ca <main+0x52>
     2ce:	00 c0       	rjmp	.+0      	; 0x2d0 <main+0x58>
     2d0:	00 00       	nop
	_delay_ms(10);
	flag = 1;
     2d2:	81 e0       	ldi	r24, 0x01	; 1
     2d4:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__data_end>
	asm("sei");
     2d8:	78 94       	sei
	sleep_enable();
     2da:	85 b7       	in	r24, 0x35	; 53
     2dc:	80 62       	ori	r24, 0x20	; 32
     2de:	85 bf       	out	0x35, r24	; 53
    while (1) 
    {
	if( flag == 1){
		buff[0] = 0xe3;
     2e0:	0f 2e       	mov	r0, r31
     2e2:	f3 ee       	ldi	r31, 0xE3	; 227
     2e4:	af 2e       	mov	r10, r31
     2e6:	f0 2d       	mov	r31, r0
		tw_master_transmit(0x40, buff , 1 , 0 );
		tw_master_receive(0x40 , buff , 3 );
		temp = -46.85 + 175.72 * ((uint16_t)(buff[0] << 8 | buff[1]) / 65536.0);
		buff[0] = 0xe5;
     2e8:	0f 2e       	mov	r0, r31
     2ea:	f5 ee       	ldi	r31, 0xE5	; 229
     2ec:	bf 2e       	mov	r11, r31
     2ee:	f0 2d       	mov	r31, r0
		#ifdef SERIAL_SEND
		char str[50];
		uint8_t len = sprintf(str,"temp = %4.1f , humidity = %4.1f\n" , temp , humidity);
		serial_transmit(str , len);
		#endif
		data[0] = (int)temp / 10;
     2f0:	0f 2e       	mov	r0, r31
     2f2:	fa e0       	ldi	r31, 0x0A	; 10
     2f4:	cf 2e       	mov	r12, r31
     2f6:	d1 2c       	mov	r13, r1
     2f8:	f0 2d       	mov	r31, r0
     2fa:	00 e1       	ldi	r16, 0x10	; 16
     2fc:	11 e0       	ldi	r17, 0x01	; 1
		data[0] %= 10;
     2fe:	0f 2e       	mov	r0, r31
     300:	fd ec       	ldi	r31, 0xCD	; 205
     302:	ef 2e       	mov	r14, r31
     304:	f0 2d       	mov	r31, r0
		data[2] = (int)humidity / 10;
		data[2] %= 10;
		data[3] = (int)humidity % 10;
		//_delay_ms(500);
		}
		if(seconds == 8) PORTE = 1 << 5;
     306:	68 94       	set
     308:	ff 24       	eor	r15, r15
     30a:	f5 f8       	bld	r15, 5
	flag = 1;
	asm("sei");
	sleep_enable();
    while (1) 
    {
	if( flag == 1){
     30c:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
     310:	81 30       	cpi	r24, 0x01	; 1
     312:	09 f0       	breq	.+2      	; 0x316 <main+0x9e>
     314:	a4 c0       	rjmp	.+328    	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
		buff[0] = 0xe3;
     316:	a9 82       	std	Y+1, r10	; 0x01
		tw_master_transmit(0x40, buff , 1 , 0 );
     318:	20 e0       	ldi	r18, 0x00	; 0
     31a:	41 e0       	ldi	r20, 0x01	; 1
     31c:	be 01       	movw	r22, r28
     31e:	6f 5f       	subi	r22, 0xFF	; 255
     320:	7f 4f       	sbci	r23, 0xFF	; 255
     322:	80 e4       	ldi	r24, 0x40	; 64
     324:	0e 94 98 02 	call	0x530	; 0x530 <tw_master_transmit>
		tw_master_receive(0x40 , buff , 3 );
     328:	43 e0       	ldi	r20, 0x03	; 3
     32a:	be 01       	movw	r22, r28
     32c:	6f 5f       	subi	r22, 0xFF	; 255
     32e:	7f 4f       	sbci	r23, 0xFF	; 255
     330:	80 e4       	ldi	r24, 0x40	; 64
     332:	0e 94 df 02 	call	0x5be	; 0x5be <tw_master_receive>
		temp = -46.85 + 175.72 * ((uint16_t)(buff[0] << 8 | buff[1]) / 65536.0);
     336:	69 81       	ldd	r22, Y+1	; 0x01
     338:	70 e0       	ldi	r23, 0x00	; 0
     33a:	76 2f       	mov	r23, r22
     33c:	66 27       	eor	r22, r22
     33e:	8a 81       	ldd	r24, Y+2	; 0x02
     340:	68 2b       	or	r22, r24
     342:	80 e0       	ldi	r24, 0x00	; 0
     344:	90 e0       	ldi	r25, 0x00	; 0
     346:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <__floatunsisf>
     34a:	20 e0       	ldi	r18, 0x00	; 0
     34c:	30 e0       	ldi	r19, 0x00	; 0
     34e:	40 e8       	ldi	r20, 0x80	; 128
     350:	57 e3       	ldi	r21, 0x37	; 55
     352:	0e 94 72 04 	call	0x8e4	; 0x8e4 <__mulsf3>
     356:	22 e5       	ldi	r18, 0x52	; 82
     358:	38 eb       	ldi	r19, 0xB8	; 184
     35a:	4f e2       	ldi	r20, 0x2F	; 47
     35c:	53 e4       	ldi	r21, 0x43	; 67
     35e:	0e 94 72 04 	call	0x8e4	; 0x8e4 <__mulsf3>
     362:	26 e6       	ldi	r18, 0x66	; 102
     364:	36 e6       	ldi	r19, 0x66	; 102
     366:	4b e3       	ldi	r20, 0x3B	; 59
     368:	52 e4       	ldi	r21, 0x42	; 66
     36a:	0e 94 41 03 	call	0x682	; 0x682 <__subsf3>
     36e:	60 93 18 01 	sts	0x0118, r22	; 0x800118 <temp>
     372:	70 93 19 01 	sts	0x0119, r23	; 0x800119 <temp+0x1>
     376:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <temp+0x2>
     37a:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <temp+0x3>
		buff[0] = 0xe5;
     37e:	b9 82       	std	Y+1, r11	; 0x01
		tw_master_transmit(0x40, buff , 1 , 0 );
     380:	20 e0       	ldi	r18, 0x00	; 0
     382:	41 e0       	ldi	r20, 0x01	; 1
     384:	be 01       	movw	r22, r28
     386:	6f 5f       	subi	r22, 0xFF	; 255
     388:	7f 4f       	sbci	r23, 0xFF	; 255
     38a:	80 e4       	ldi	r24, 0x40	; 64
     38c:	0e 94 98 02 	call	0x530	; 0x530 <tw_master_transmit>
		tw_master_receive(0x40 , buff , 3 );
     390:	43 e0       	ldi	r20, 0x03	; 3
     392:	be 01       	movw	r22, r28
     394:	6f 5f       	subi	r22, 0xFF	; 255
     396:	7f 4f       	sbci	r23, 0xFF	; 255
     398:	80 e4       	ldi	r24, 0x40	; 64
     39a:	0e 94 df 02 	call	0x5be	; 0x5be <tw_master_receive>
		humidity = -6 + 125.00 * ((uint16_t)(buff[0] << 8 | buff[1])/ 65536.0);
     39e:	69 81       	ldd	r22, Y+1	; 0x01
     3a0:	70 e0       	ldi	r23, 0x00	; 0
     3a2:	76 2f       	mov	r23, r22
     3a4:	66 27       	eor	r22, r22
     3a6:	8a 81       	ldd	r24, Y+2	; 0x02
     3a8:	68 2b       	or	r22, r24
     3aa:	80 e0       	ldi	r24, 0x00	; 0
     3ac:	90 e0       	ldi	r25, 0x00	; 0
     3ae:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <__floatunsisf>
     3b2:	20 e0       	ldi	r18, 0x00	; 0
     3b4:	30 e0       	ldi	r19, 0x00	; 0
     3b6:	40 e8       	ldi	r20, 0x80	; 128
     3b8:	57 e3       	ldi	r21, 0x37	; 55
     3ba:	0e 94 72 04 	call	0x8e4	; 0x8e4 <__mulsf3>
     3be:	20 e0       	ldi	r18, 0x00	; 0
     3c0:	30 e0       	ldi	r19, 0x00	; 0
     3c2:	4a ef       	ldi	r20, 0xFA	; 250
     3c4:	52 e4       	ldi	r21, 0x42	; 66
     3c6:	0e 94 72 04 	call	0x8e4	; 0x8e4 <__mulsf3>
     3ca:	20 e0       	ldi	r18, 0x00	; 0
     3cc:	30 e0       	ldi	r19, 0x00	; 0
     3ce:	40 ec       	ldi	r20, 0xC0	; 192
     3d0:	50 e4       	ldi	r21, 0x40	; 64
     3d2:	0e 94 41 03 	call	0x682	; 0x682 <__subsf3>
     3d6:	2b 01       	movw	r4, r22
     3d8:	3c 01       	movw	r6, r24
     3da:	60 93 14 01 	sts	0x0114, r22	; 0x800114 <humidity>
     3de:	70 93 15 01 	sts	0x0115, r23	; 0x800115 <humidity+0x1>
     3e2:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <humidity+0x2>
     3e6:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <humidity+0x3>
		flag = 0;
     3ea:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__data_end>
		#ifdef SERIAL_SEND
		char str[50];
		uint8_t len = sprintf(str,"temp = %4.1f , humidity = %4.1f\n" , temp , humidity);
		serial_transmit(str , len);
		#endif
		data[0] = (int)temp / 10;
     3ee:	60 91 18 01 	lds	r22, 0x0118	; 0x800118 <temp>
     3f2:	70 91 19 01 	lds	r23, 0x0119	; 0x800119 <temp+0x1>
     3f6:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <temp+0x2>
     3fa:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <temp+0x3>
     3fe:	0e 94 ae 03 	call	0x75c	; 0x75c <__fixsfsi>
     402:	cb 01       	movw	r24, r22
     404:	b6 01       	movw	r22, r12
     406:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <__divmodhi4>
     40a:	f8 01       	movw	r30, r16
     40c:	60 83       	st	Z, r22
		data[0] %= 10;
     40e:	30 81       	ld	r19, Z
     410:	3e 9d       	mul	r19, r14
     412:	91 2d       	mov	r25, r1
     414:	11 24       	eor	r1, r1
     416:	96 95       	lsr	r25
     418:	96 95       	lsr	r25
     41a:	96 95       	lsr	r25
     41c:	99 0f       	add	r25, r25
     41e:	29 2f       	mov	r18, r25
     420:	22 0f       	add	r18, r18
     422:	22 0f       	add	r18, r18
     424:	92 0f       	add	r25, r18
     426:	39 1b       	sub	r19, r25
     428:	30 83       	st	Z, r19
		data[1] = (int)temp % 10;
     42a:	81 83       	std	Z+1, r24	; 0x01

		data[2] = (int)humidity / 10;
     42c:	c3 01       	movw	r24, r6
     42e:	b2 01       	movw	r22, r4
     430:	0e 94 ae 03 	call	0x75c	; 0x75c <__fixsfsi>
     434:	cb 01       	movw	r24, r22
     436:	b6 01       	movw	r22, r12
     438:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <__divmodhi4>
     43c:	f8 01       	movw	r30, r16
     43e:	62 83       	std	Z+2, r22	; 0x02
		data[2] %= 10;
     440:	32 81       	ldd	r19, Z+2	; 0x02
     442:	3e 9d       	mul	r19, r14
     444:	91 2d       	mov	r25, r1
     446:	11 24       	eor	r1, r1
     448:	96 95       	lsr	r25
     44a:	96 95       	lsr	r25
     44c:	96 95       	lsr	r25
     44e:	99 0f       	add	r25, r25
     450:	29 2f       	mov	r18, r25
     452:	22 0f       	add	r18, r18
     454:	22 0f       	add	r18, r18
     456:	92 0f       	add	r25, r18
     458:	39 1b       	sub	r19, r25
     45a:	32 83       	std	Z+2, r19	; 0x02
		data[3] = (int)humidity % 10;
     45c:	83 83       	std	Z+3, r24	; 0x03
		//_delay_ms(500);
		}
		if(seconds == 8) PORTE = 1 << 5;
     45e:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <seconds>
     462:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <seconds+0x1>
     466:	08 97       	sbiw	r24, 0x08	; 8
     468:	09 f4       	brne	.+2      	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
     46a:	f3 b8       	out	0x03, r15	; 3
		set_sleep_mode(SLEEP_MODE_IDLE);
     46c:	85 b7       	in	r24, 0x35	; 53
     46e:	83 7e       	andi	r24, 0xE3	; 227
     470:	85 bf       	out	0x35, r24	; 53
		sleep_cpu();
     472:	88 95       	sleep
	}
     474:	4b cf       	rjmp	.-362    	; 0x30c <main+0x94>

00000476 <tw_start>:
{
	/* Send START condition */
#if DEBUG_LOG
	printf(BG "Send START condition..." RESET);
#endif
	TWCR =  (1 << TWINT) | (1 << TWEN) | (1 << TWSTA);
     476:	84 ea       	ldi	r24, 0xA4	; 164
     478:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7f0074>
	
	/* Wait for TWINT flag to set */
	while (!(TWCR & (1 << TWINT)));
     47c:	e4 e7       	ldi	r30, 0x74	; 116
     47e:	f0 e0       	ldi	r31, 0x00	; 0
     480:	80 81       	ld	r24, Z
     482:	88 23       	and	r24, r24
     484:	ec f7       	brge	.-6      	; 0x480 <tw_start+0xa>
	
	/* Check error */
	if (TW_STATUS != TW_START && TW_STATUS != TW_REP_START)
     486:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7f0071>
     48a:	88 7f       	andi	r24, 0xF8	; 248
     48c:	88 30       	cpi	r24, 0x08	; 8
     48e:	51 f0       	breq	.+20     	; 0x4a4 <tw_start+0x2e>
     490:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7f0071>
     494:	88 7f       	andi	r24, 0xF8	; 248
     496:	80 31       	cpi	r24, 0x10	; 16
     498:	41 f0       	breq	.+16     	; 0x4aa <tw_start+0x34>
	{
#if DEBUG_LOG
		printf("\n");
#endif
		return TW_STATUS;
     49a:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7f0071>
     49e:	88 7f       	andi	r24, 0xF8	; 248
     4a0:	90 e0       	ldi	r25, 0x00	; 0
     4a2:	08 95       	ret
	}
	
#if DEBUG_LOG
	printf("SUCCESS\n");
#endif
	return SUCCESS;
     4a4:	80 e0       	ldi	r24, 0x00	; 0
     4a6:	90 e0       	ldi	r25, 0x00	; 0
     4a8:	08 95       	ret
     4aa:	80 e0       	ldi	r24, 0x00	; 0
     4ac:	90 e0       	ldi	r25, 0x00	; 0
}
     4ae:	08 95       	ret

000004b0 <tw_write_sla>:
{
	/* Transmit slave address with read/write flag */
#if DEBUG_LOG
	printf(BG "Write SLA + R/W: 0x%02X..." RESET, sla);
#endif
	TWDR = sla;
     4b0:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7f0073>
	TWCR = (1 << TWINT) | (1 << TWEN);
     4b4:	84 e8       	ldi	r24, 0x84	; 132
     4b6:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7f0074>
	
	/* Wait for TWINT flag to set */
	while (!(TWCR & (1 << TWINT)));
     4ba:	e4 e7       	ldi	r30, 0x74	; 116
     4bc:	f0 e0       	ldi	r31, 0x00	; 0
     4be:	80 81       	ld	r24, Z
     4c0:	88 23       	and	r24, r24
     4c2:	ec f7       	brge	.-6      	; 0x4be <tw_write_sla+0xe>
	if (TW_STATUS != TW_MT_SLA_ACK && TW_STATUS != TW_MR_SLA_ACK)
     4c4:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7f0071>
     4c8:	88 7f       	andi	r24, 0xF8	; 248
     4ca:	88 31       	cpi	r24, 0x18	; 24
     4cc:	51 f0       	breq	.+20     	; 0x4e2 <tw_write_sla+0x32>
     4ce:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7f0071>
     4d2:	88 7f       	andi	r24, 0xF8	; 248
     4d4:	80 34       	cpi	r24, 0x40	; 64
     4d6:	41 f0       	breq	.+16     	; 0x4e8 <tw_write_sla+0x38>
	{
#if DEBUG_LOG
		printf("\n");
#endif
		return TW_STATUS;
     4d8:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7f0071>
     4dc:	88 7f       	andi	r24, 0xF8	; 248
     4de:	90 e0       	ldi	r25, 0x00	; 0
     4e0:	08 95       	ret
	}

#if DEBUG_LOG
	printf("SUCCESS\n");
#endif
	return SUCCESS;
     4e2:	80 e0       	ldi	r24, 0x00	; 0
     4e4:	90 e0       	ldi	r25, 0x00	; 0
     4e6:	08 95       	ret
     4e8:	80 e0       	ldi	r24, 0x00	; 0
     4ea:	90 e0       	ldi	r25, 0x00	; 0
}
     4ec:	08 95       	ret

000004ee <tw_init>:
}


void tw_init(twi_freq_mode_t twi_freq_mode, bool pullup_en)
{
	DDRD  |= (1 << TW_SDA_PIN) | (1 << TW_SCL_PIN);
     4ee:	91 b3       	in	r25, 0x11	; 17
     4f0:	93 60       	ori	r25, 0x03	; 3
     4f2:	91 bb       	out	0x11, r25	; 17
	if (pullup_en)
     4f4:	66 23       	and	r22, r22
     4f6:	21 f0       	breq	.+8      	; 0x500 <tw_init+0x12>
	{
#if DEBUG_LOG
		puts(BG "Enable pull-up resistor." RESET);
#endif
		PORTD |= (1 << TW_SDA_PIN) | (1 << TW_SCL_PIN);
     4f8:	92 b3       	in	r25, 0x12	; 18
     4fa:	93 60       	ori	r25, 0x03	; 3
     4fc:	92 bb       	out	0x12, r25	; 18
     4fe:	03 c0       	rjmp	.+6      	; 0x506 <tw_init+0x18>
	}
	else
	{
		PORTD &= ~((1 << TW_SDA_PIN) | (1 << TW_SCL_PIN));
     500:	92 b3       	in	r25, 0x12	; 18
     502:	9c 7f       	andi	r25, 0xFC	; 252
     504:	92 bb       	out	0x12, r25	; 18
	}
	DDRD  &= ~((1 << TW_SDA_PIN) | (1 << TW_SCL_PIN));
     506:	91 b3       	in	r25, 0x11	; 17
     508:	9c 7f       	andi	r25, 0xFC	; 252
     50a:	91 bb       	out	0x11, r25	; 17
	
	switch (twi_freq_mode)
     50c:	81 30       	cpi	r24, 0x01	; 1
     50e:	41 f0       	breq	.+16     	; 0x520 <tw_init+0x32>
     510:	18 f0       	brcs	.+6      	; 0x518 <tw_init+0x2a>
     512:	82 30       	cpi	r24, 0x02	; 2
     514:	49 f0       	breq	.+18     	; 0x528 <tw_init+0x3a>
     516:	08 95       	ret
	{
		case TW_FREQ_100K:
		/* Set bit rate register 72 and prescaler to 1 resulting in
		SCL_freq = 16MHz/(16 + 2*72*1) = 100KHz	*/
		TWBR = 72;
     518:	88 e4       	ldi	r24, 0x48	; 72
     51a:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7f0070>
		break;
     51e:	08 95       	ret
		
		case TW_FREQ_250K:
		/* Set bit rate register 24 and prescaler to 1 resulting in
		SCL_freq = 16MHz/(16 + 2*24*1) = 250KHz	*/
		TWBR = 24;
     520:	88 e1       	ldi	r24, 0x18	; 24
     522:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7f0070>
		break;
     526:	08 95       	ret
		
		case TW_FREQ_400K:
		/* Set bit rate register 12 and prescaler to 1 resulting in
		SCL_freq = 16MHz/(16 + 2*12*1) = 400KHz	*/
		TWBR = 12;
     528:	8c e0       	ldi	r24, 0x0C	; 12
     52a:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7f0070>
     52e:	08 95       	ret

00000530 <tw_master_transmit>:
	}
}


ret_code_t tw_master_transmit(uint8_t slave_addr, uint8_t* p_data, uint8_t len, bool repeat_start)
{
     530:	ef 92       	push	r14
     532:	ff 92       	push	r15
     534:	1f 93       	push	r17
     536:	cf 93       	push	r28
     538:	df 93       	push	r29
     53a:	d8 2f       	mov	r29, r24
     53c:	7b 01       	movw	r14, r22
     53e:	c4 2f       	mov	r28, r20
     540:	12 2f       	mov	r17, r18
	ret_code_t error_code;
	
	/* Send START condition */
	error_code = tw_start();
     542:	0e 94 3b 02 	call	0x476	; 0x476 <tw_start>
	if (error_code != SUCCESS)
     546:	00 97       	sbiw	r24, 0x00	; 0
     548:	a1 f5       	brne	.+104    	; 0x5b2 <tw_master_transmit+0x82>
	{
		return error_code;
	}
	
	/* Send slave address with WRITE flag */
	error_code = tw_write_sla(TW_SLA_W(slave_addr));
     54a:	8d 2f       	mov	r24, r29
     54c:	88 0f       	add	r24, r24
     54e:	0e 94 58 02 	call	0x4b0	; 0x4b0 <tw_write_sla>
	if (error_code != SUCCESS)
     552:	00 97       	sbiw	r24, 0x00	; 0
     554:	71 f5       	brne	.+92     	; 0x5b2 <tw_master_transmit+0x82>
	{
		return error_code;
	}
	
	/* Send data byte in single or burst mode */
	for (int i = 0; i < len; ++i)
     556:	cc 23       	and	r28, r28
     558:	11 f1       	breq	.+68     	; 0x59e <tw_master_transmit+0x6e>
     55a:	d7 01       	movw	r26, r14
     55c:	b7 01       	movw	r22, r14
     55e:	6c 0f       	add	r22, r28
     560:	71 1d       	adc	r23, r1
{
	/* Transmit 1 byte*/
#if DEBUG_LOG
	printf(BG "Write data byte: 0x%02X..." RESET, data);
#endif
	TWDR = data;
     562:	23 e7       	ldi	r18, 0x73	; 115
     564:	30 e0       	ldi	r19, 0x00	; 0
	TWCR = (1 << TWINT) | (1 << TWEN);
     566:	e4 e7       	ldi	r30, 0x74	; 116
     568:	f0 e0       	ldi	r31, 0x00	; 0
     56a:	44 e8       	ldi	r20, 0x84	; 132
	
	/* Wait for TWINT flag to set */
	while (!(TWCR & (1 << TWINT)));
	if (TW_STATUS != TW_MT_DATA_ACK)
     56c:	0f 2e       	mov	r0, r31
     56e:	f1 e7       	ldi	r31, 0x71	; 113
     570:	ef 2e       	mov	r14, r31
     572:	f1 2c       	mov	r15, r1
     574:	f0 2d       	mov	r31, r0
	}
	
	/* Send data byte in single or burst mode */
	for (int i = 0; i < len; ++i)
	{
		error_code = tw_write(p_data[i]);
     576:	8d 91       	ld	r24, X+
{
	/* Transmit 1 byte*/
#if DEBUG_LOG
	printf(BG "Write data byte: 0x%02X..." RESET, data);
#endif
	TWDR = data;
     578:	e9 01       	movw	r28, r18
     57a:	88 83       	st	Y, r24
	TWCR = (1 << TWINT) | (1 << TWEN);
     57c:	40 83       	st	Z, r20
	
	/* Wait for TWINT flag to set */
	while (!(TWCR & (1 << TWINT)));
     57e:	80 81       	ld	r24, Z
     580:	88 23       	and	r24, r24
     582:	ec f7       	brge	.-6      	; 0x57e <tw_master_transmit+0x4e>
	if (TW_STATUS != TW_MT_DATA_ACK)
     584:	e7 01       	movw	r28, r14
     586:	88 81       	ld	r24, Y
     588:	88 7f       	andi	r24, 0xF8	; 248
     58a:	88 32       	cpi	r24, 0x28	; 40
     58c:	29 f0       	breq	.+10     	; 0x598 <tw_master_transmit+0x68>
	{
#if DEBUG_LOG
		printf("\n");
#endif
		return TW_STATUS;
     58e:	88 81       	ld	r24, Y
     590:	88 7f       	andi	r24, 0xF8	; 248
     592:	90 e0       	ldi	r25, 0x00	; 0
	
	/* Send data byte in single or burst mode */
	for (int i = 0; i < len; ++i)
	{
		error_code = tw_write(p_data[i]);
		if (error_code != SUCCESS)
     594:	00 97       	sbiw	r24, 0x00	; 0
     596:	69 f4       	brne	.+26     	; 0x5b2 <tw_master_transmit+0x82>
	{
		return error_code;
	}
	
	/* Send data byte in single or burst mode */
	for (int i = 0; i < len; ++i)
     598:	6a 17       	cp	r22, r26
     59a:	7b 07       	cpc	r23, r27
     59c:	61 f7       	brne	.-40     	; 0x576 <tw_master_transmit+0x46>
		{
			return error_code;
		}
	}
	
	if (!repeat_start)
     59e:	11 11       	cpse	r17, r1
     5a0:	06 c0       	rjmp	.+12     	; 0x5ae <tw_master_transmit+0x7e>
{
	/* Send STOP condition */
#if DEBUG_LOG
	puts(BG "Send STOP condition." RESET);
#endif
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
     5a2:	84 e9       	ldi	r24, 0x94	; 148
     5a4:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7f0074>
	{
		/* Send STOP condition */
		tw_stop();
	}
	
	return SUCCESS;
     5a8:	80 e0       	ldi	r24, 0x00	; 0
     5aa:	90 e0       	ldi	r25, 0x00	; 0
     5ac:	02 c0       	rjmp	.+4      	; 0x5b2 <tw_master_transmit+0x82>
     5ae:	80 e0       	ldi	r24, 0x00	; 0
     5b0:	90 e0       	ldi	r25, 0x00	; 0
}
     5b2:	df 91       	pop	r29
     5b4:	cf 91       	pop	r28
     5b6:	1f 91       	pop	r17
     5b8:	ff 90       	pop	r15
     5ba:	ef 90       	pop	r14
     5bc:	08 95       	ret

000005be <tw_master_receive>:


ret_code_t tw_master_receive(uint8_t slave_addr, uint8_t* p_data, uint8_t len)
{
     5be:	ef 92       	push	r14
     5c0:	ff 92       	push	r15
     5c2:	0f 93       	push	r16
     5c4:	1f 93       	push	r17
     5c6:	cf 93       	push	r28
     5c8:	df 93       	push	r29
     5ca:	08 2f       	mov	r16, r24
     5cc:	7b 01       	movw	r14, r22
     5ce:	14 2f       	mov	r17, r20
	ret_code_t error_code;
	
	/* Send START condition */
	error_code = tw_start();
     5d0:	0e 94 3b 02 	call	0x476	; 0x476 <tw_start>
     5d4:	9c 01       	movw	r18, r24
	if (error_code != SUCCESS)
     5d6:	00 97       	sbiw	r24, 0x00	; 0
     5d8:	09 f0       	breq	.+2      	; 0x5dc <tw_master_receive+0x1e>
     5da:	4b c0       	rjmp	.+150    	; 0x672 <tw_master_receive+0xb4>
	{
		return error_code;
	}
	
	/* Write slave address with READ flag */
	error_code = tw_write_sla(TW_SLA_R(slave_addr));
     5dc:	80 2f       	mov	r24, r16
     5de:	88 0f       	add	r24, r24
     5e0:	81 60       	ori	r24, 0x01	; 1
     5e2:	0e 94 58 02 	call	0x4b0	; 0x4b0 <tw_write_sla>
	if (error_code != SUCCESS)
     5e6:	00 97       	sbiw	r24, 0x00	; 0
     5e8:	09 f0       	breq	.+2      	; 0x5ec <tw_master_receive+0x2e>
     5ea:	44 c0       	rjmp	.+136    	; 0x674 <tw_master_receive+0xb6>
	{
		return error_code;
	}
	
	/* Read single or multiple data byte and send ack */
	for (int i = 0; i < len-1; ++i)
     5ec:	81 2f       	mov	r24, r17
     5ee:	90 e0       	ldi	r25, 0x00	; 0
     5f0:	01 97       	sbiw	r24, 0x01	; 1
     5f2:	18 16       	cp	r1, r24
     5f4:	19 06       	cpc	r1, r25
     5f6:	ec f4       	brge	.+58     	; 0x632 <tw_master_receive+0x74>
     5f8:	d7 01       	movw	r26, r14
     5fa:	ac 01       	movw	r20, r24
     5fc:	4e 0d       	add	r20, r14
     5fe:	5f 1d       	adc	r21, r15

static uint8_t tw_read(bool read_ack)
{
	if (read_ack)
	{
		TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);
     600:	e4 e7       	ldi	r30, 0x74	; 116
     602:	f0 e0       	ldi	r31, 0x00	; 0
     604:	94 ec       	ldi	r25, 0xC4	; 196
		while (!(TWCR & (1 << TWINT)));
		if (TW_STATUS != TW_MR_DATA_ACK)
     606:	21 e7       	ldi	r18, 0x71	; 113
     608:	30 e0       	ldi	r19, 0x00	; 0
		if (TW_STATUS != TW_MR_DATA_NACK)
		{
			return TW_STATUS;
		}
	}
	uint8_t data = TWDR;
     60a:	63 e7       	ldi	r22, 0x73	; 115
     60c:	70 e0       	ldi	r23, 0x00	; 0

static uint8_t tw_read(bool read_ack)
{
	if (read_ack)
	{
		TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWEA);
     60e:	90 83       	st	Z, r25
		while (!(TWCR & (1 << TWINT)));
     610:	80 81       	ld	r24, Z
     612:	88 23       	and	r24, r24
     614:	ec f7       	brge	.-6      	; 0x610 <tw_master_receive+0x52>
		if (TW_STATUS != TW_MR_DATA_ACK)
     616:	e9 01       	movw	r28, r18
     618:	88 81       	ld	r24, Y
     61a:	88 7f       	andi	r24, 0xF8	; 248
     61c:	80 35       	cpi	r24, 0x50	; 80
     61e:	19 f0       	breq	.+6      	; 0x626 <tw_master_receive+0x68>
		{
			return TW_STATUS;
     620:	88 81       	ld	r24, Y
     622:	88 7f       	andi	r24, 0xF8	; 248
     624:	02 c0       	rjmp	.+4      	; 0x62a <tw_master_receive+0x6c>
		if (TW_STATUS != TW_MR_DATA_NACK)
		{
			return TW_STATUS;
		}
	}
	uint8_t data = TWDR;
     626:	eb 01       	movw	r28, r22
     628:	88 81       	ld	r24, Y
	}
	
	/* Read single or multiple data byte and send ack */
	for (int i = 0; i < len-1; ++i)
	{
		p_data[i] = tw_read(TW_READ_ACK);
     62a:	8d 93       	st	X+, r24
	{
		return error_code;
	}
	
	/* Read single or multiple data byte and send ack */
	for (int i = 0; i < len-1; ++i)
     62c:	4a 17       	cp	r20, r26
     62e:	5b 07       	cpc	r21, r27
     630:	71 f7       	brne	.-36     	; 0x60e <tw_master_receive+0x50>
	{
		p_data[i] = tw_read(TW_READ_ACK);
	}
	p_data[len-1] = tw_read(TW_READ_NACK);
     632:	81 2f       	mov	r24, r17
     634:	90 e0       	ldi	r25, 0x00	; 0
     636:	01 97       	sbiw	r24, 0x01	; 1
     638:	e7 01       	movw	r28, r14
     63a:	c8 0f       	add	r28, r24
     63c:	d9 1f       	adc	r29, r25
			return TW_STATUS;
		}
	}
	else
	{
		TWCR = (1 << TWINT) | (1 << TWEN);
     63e:	84 e8       	ldi	r24, 0x84	; 132
     640:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7f0074>
		while (!(TWCR & (1 << TWINT)));
     644:	e4 e7       	ldi	r30, 0x74	; 116
     646:	f0 e0       	ldi	r31, 0x00	; 0
     648:	80 81       	ld	r24, Z
     64a:	88 23       	and	r24, r24
     64c:	ec f7       	brge	.-6      	; 0x648 <tw_master_receive+0x8a>
		if (TW_STATUS != TW_MR_DATA_NACK)
     64e:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7f0071>
     652:	88 7f       	andi	r24, 0xF8	; 248
     654:	88 35       	cpi	r24, 0x58	; 88
     656:	21 f0       	breq	.+8      	; 0x660 <tw_master_receive+0xa2>
		{
			return TW_STATUS;
     658:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <__TEXT_REGION_LENGTH__+0x7f0071>
     65c:	88 7f       	andi	r24, 0xF8	; 248
     65e:	02 c0       	rjmp	.+4      	; 0x664 <tw_master_receive+0xa6>
		}
	}
	uint8_t data = TWDR;
     660:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7f0073>
	/* Read single or multiple data byte and send ack */
	for (int i = 0; i < len-1; ++i)
	{
		p_data[i] = tw_read(TW_READ_ACK);
	}
	p_data[len-1] = tw_read(TW_READ_NACK);
     664:	88 83       	st	Y, r24
{
	/* Send STOP condition */
#if DEBUG_LOG
	puts(BG "Send STOP condition." RESET);
#endif
	TWCR = (1 << TWINT) | (1 << TWEN) | (1 << TWSTO);
     666:	84 e9       	ldi	r24, 0x94	; 148
     668:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7f0074>
	p_data[len-1] = tw_read(TW_READ_NACK);
	
	/* Send STOP condition */
	tw_stop();
	
	return SUCCESS;
     66c:	80 e0       	ldi	r24, 0x00	; 0
     66e:	90 e0       	ldi	r25, 0x00	; 0
     670:	01 c0       	rjmp	.+2      	; 0x674 <tw_master_receive+0xb6>
	
	/* Send START condition */
	error_code = tw_start();
	if (error_code != SUCCESS)
	{
		return error_code;
     672:	93 2f       	mov	r25, r19
	
	/* Send STOP condition */
	tw_stop();
	
	return SUCCESS;
}
     674:	df 91       	pop	r29
     676:	cf 91       	pop	r28
     678:	1f 91       	pop	r17
     67a:	0f 91       	pop	r16
     67c:	ff 90       	pop	r15
     67e:	ef 90       	pop	r14
     680:	08 95       	ret

00000682 <__subsf3>:
     682:	50 58       	subi	r21, 0x80	; 128

00000684 <__addsf3>:
     684:	bb 27       	eor	r27, r27
     686:	aa 27       	eor	r26, r26
     688:	0e 94 59 03 	call	0x6b2	; 0x6b2 <__addsf3x>
     68c:	0c 94 38 04 	jmp	0x870	; 0x870 <__fp_round>
     690:	0e 94 2a 04 	call	0x854	; 0x854 <__fp_pscA>
     694:	38 f0       	brcs	.+14     	; 0x6a4 <__addsf3+0x20>
     696:	0e 94 31 04 	call	0x862	; 0x862 <__fp_pscB>
     69a:	20 f0       	brcs	.+8      	; 0x6a4 <__addsf3+0x20>
     69c:	39 f4       	brne	.+14     	; 0x6ac <__addsf3+0x28>
     69e:	9f 3f       	cpi	r25, 0xFF	; 255
     6a0:	19 f4       	brne	.+6      	; 0x6a8 <__addsf3+0x24>
     6a2:	26 f4       	brtc	.+8      	; 0x6ac <__addsf3+0x28>
     6a4:	0c 94 27 04 	jmp	0x84e	; 0x84e <__fp_nan>
     6a8:	0e f4       	brtc	.+2      	; 0x6ac <__addsf3+0x28>
     6aa:	e0 95       	com	r30
     6ac:	e7 fb       	bst	r30, 7
     6ae:	0c 94 21 04 	jmp	0x842	; 0x842 <__fp_inf>

000006b2 <__addsf3x>:
     6b2:	e9 2f       	mov	r30, r25
     6b4:	0e 94 49 04 	call	0x892	; 0x892 <__fp_split3>
     6b8:	58 f3       	brcs	.-42     	; 0x690 <__addsf3+0xc>
     6ba:	ba 17       	cp	r27, r26
     6bc:	62 07       	cpc	r22, r18
     6be:	73 07       	cpc	r23, r19
     6c0:	84 07       	cpc	r24, r20
     6c2:	95 07       	cpc	r25, r21
     6c4:	20 f0       	brcs	.+8      	; 0x6ce <__addsf3x+0x1c>
     6c6:	79 f4       	brne	.+30     	; 0x6e6 <__addsf3x+0x34>
     6c8:	a6 f5       	brtc	.+104    	; 0x732 <__addsf3x+0x80>
     6ca:	0c 94 6b 04 	jmp	0x8d6	; 0x8d6 <__fp_zero>
     6ce:	0e f4       	brtc	.+2      	; 0x6d2 <__addsf3x+0x20>
     6d0:	e0 95       	com	r30
     6d2:	0b 2e       	mov	r0, r27
     6d4:	ba 2f       	mov	r27, r26
     6d6:	a0 2d       	mov	r26, r0
     6d8:	0b 01       	movw	r0, r22
     6da:	b9 01       	movw	r22, r18
     6dc:	90 01       	movw	r18, r0
     6de:	0c 01       	movw	r0, r24
     6e0:	ca 01       	movw	r24, r20
     6e2:	a0 01       	movw	r20, r0
     6e4:	11 24       	eor	r1, r1
     6e6:	ff 27       	eor	r31, r31
     6e8:	59 1b       	sub	r21, r25
     6ea:	99 f0       	breq	.+38     	; 0x712 <__addsf3x+0x60>
     6ec:	59 3f       	cpi	r21, 0xF9	; 249
     6ee:	50 f4       	brcc	.+20     	; 0x704 <__addsf3x+0x52>
     6f0:	50 3e       	cpi	r21, 0xE0	; 224
     6f2:	68 f1       	brcs	.+90     	; 0x74e <__addsf3x+0x9c>
     6f4:	1a 16       	cp	r1, r26
     6f6:	f0 40       	sbci	r31, 0x00	; 0
     6f8:	a2 2f       	mov	r26, r18
     6fa:	23 2f       	mov	r18, r19
     6fc:	34 2f       	mov	r19, r20
     6fe:	44 27       	eor	r20, r20
     700:	58 5f       	subi	r21, 0xF8	; 248
     702:	f3 cf       	rjmp	.-26     	; 0x6ea <__addsf3x+0x38>
     704:	46 95       	lsr	r20
     706:	37 95       	ror	r19
     708:	27 95       	ror	r18
     70a:	a7 95       	ror	r26
     70c:	f0 40       	sbci	r31, 0x00	; 0
     70e:	53 95       	inc	r21
     710:	c9 f7       	brne	.-14     	; 0x704 <__addsf3x+0x52>
     712:	7e f4       	brtc	.+30     	; 0x732 <__addsf3x+0x80>
     714:	1f 16       	cp	r1, r31
     716:	ba 0b       	sbc	r27, r26
     718:	62 0b       	sbc	r22, r18
     71a:	73 0b       	sbc	r23, r19
     71c:	84 0b       	sbc	r24, r20
     71e:	ba f0       	brmi	.+46     	; 0x74e <__addsf3x+0x9c>
     720:	91 50       	subi	r25, 0x01	; 1
     722:	a1 f0       	breq	.+40     	; 0x74c <__addsf3x+0x9a>
     724:	ff 0f       	add	r31, r31
     726:	bb 1f       	adc	r27, r27
     728:	66 1f       	adc	r22, r22
     72a:	77 1f       	adc	r23, r23
     72c:	88 1f       	adc	r24, r24
     72e:	c2 f7       	brpl	.-16     	; 0x720 <__addsf3x+0x6e>
     730:	0e c0       	rjmp	.+28     	; 0x74e <__addsf3x+0x9c>
     732:	ba 0f       	add	r27, r26
     734:	62 1f       	adc	r22, r18
     736:	73 1f       	adc	r23, r19
     738:	84 1f       	adc	r24, r20
     73a:	48 f4       	brcc	.+18     	; 0x74e <__addsf3x+0x9c>
     73c:	87 95       	ror	r24
     73e:	77 95       	ror	r23
     740:	67 95       	ror	r22
     742:	b7 95       	ror	r27
     744:	f7 95       	ror	r31
     746:	9e 3f       	cpi	r25, 0xFE	; 254
     748:	08 f0       	brcs	.+2      	; 0x74c <__addsf3x+0x9a>
     74a:	b0 cf       	rjmp	.-160    	; 0x6ac <__addsf3+0x28>
     74c:	93 95       	inc	r25
     74e:	88 0f       	add	r24, r24
     750:	08 f0       	brcs	.+2      	; 0x754 <__addsf3x+0xa2>
     752:	99 27       	eor	r25, r25
     754:	ee 0f       	add	r30, r30
     756:	97 95       	ror	r25
     758:	87 95       	ror	r24
     75a:	08 95       	ret

0000075c <__fixsfsi>:
     75c:	0e 94 b5 03 	call	0x76a	; 0x76a <__fixunssfsi>
     760:	68 94       	set
     762:	b1 11       	cpse	r27, r1
     764:	0c 94 6c 04 	jmp	0x8d8	; 0x8d8 <__fp_szero>
     768:	08 95       	ret

0000076a <__fixunssfsi>:
     76a:	0e 94 51 04 	call	0x8a2	; 0x8a2 <__fp_splitA>
     76e:	88 f0       	brcs	.+34     	; 0x792 <__fixunssfsi+0x28>
     770:	9f 57       	subi	r25, 0x7F	; 127
     772:	98 f0       	brcs	.+38     	; 0x79a <__fixunssfsi+0x30>
     774:	b9 2f       	mov	r27, r25
     776:	99 27       	eor	r25, r25
     778:	b7 51       	subi	r27, 0x17	; 23
     77a:	b0 f0       	brcs	.+44     	; 0x7a8 <__fixunssfsi+0x3e>
     77c:	e1 f0       	breq	.+56     	; 0x7b6 <__fixunssfsi+0x4c>
     77e:	66 0f       	add	r22, r22
     780:	77 1f       	adc	r23, r23
     782:	88 1f       	adc	r24, r24
     784:	99 1f       	adc	r25, r25
     786:	1a f0       	brmi	.+6      	; 0x78e <__fixunssfsi+0x24>
     788:	ba 95       	dec	r27
     78a:	c9 f7       	brne	.-14     	; 0x77e <__fixunssfsi+0x14>
     78c:	14 c0       	rjmp	.+40     	; 0x7b6 <__fixunssfsi+0x4c>
     78e:	b1 30       	cpi	r27, 0x01	; 1
     790:	91 f0       	breq	.+36     	; 0x7b6 <__fixunssfsi+0x4c>
     792:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <__fp_zero>
     796:	b1 e0       	ldi	r27, 0x01	; 1
     798:	08 95       	ret
     79a:	0c 94 6b 04 	jmp	0x8d6	; 0x8d6 <__fp_zero>
     79e:	67 2f       	mov	r22, r23
     7a0:	78 2f       	mov	r23, r24
     7a2:	88 27       	eor	r24, r24
     7a4:	b8 5f       	subi	r27, 0xF8	; 248
     7a6:	39 f0       	breq	.+14     	; 0x7b6 <__fixunssfsi+0x4c>
     7a8:	b9 3f       	cpi	r27, 0xF9	; 249
     7aa:	cc f3       	brlt	.-14     	; 0x79e <__fixunssfsi+0x34>
     7ac:	86 95       	lsr	r24
     7ae:	77 95       	ror	r23
     7b0:	67 95       	ror	r22
     7b2:	b3 95       	inc	r27
     7b4:	d9 f7       	brne	.-10     	; 0x7ac <__fixunssfsi+0x42>
     7b6:	3e f4       	brtc	.+14     	; 0x7c6 <__fixunssfsi+0x5c>
     7b8:	90 95       	com	r25
     7ba:	80 95       	com	r24
     7bc:	70 95       	com	r23
     7be:	61 95       	neg	r22
     7c0:	7f 4f       	sbci	r23, 0xFF	; 255
     7c2:	8f 4f       	sbci	r24, 0xFF	; 255
     7c4:	9f 4f       	sbci	r25, 0xFF	; 255
     7c6:	08 95       	ret

000007c8 <__floatunsisf>:
     7c8:	e8 94       	clt
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__floatsisf+0x12>

000007cc <__floatsisf>:
     7cc:	97 fb       	bst	r25, 7
     7ce:	3e f4       	brtc	.+14     	; 0x7de <__floatsisf+0x12>
     7d0:	90 95       	com	r25
     7d2:	80 95       	com	r24
     7d4:	70 95       	com	r23
     7d6:	61 95       	neg	r22
     7d8:	7f 4f       	sbci	r23, 0xFF	; 255
     7da:	8f 4f       	sbci	r24, 0xFF	; 255
     7dc:	9f 4f       	sbci	r25, 0xFF	; 255
     7de:	99 23       	and	r25, r25
     7e0:	a9 f0       	breq	.+42     	; 0x80c <__EEPROM_REGION_LENGTH__+0xc>
     7e2:	f9 2f       	mov	r31, r25
     7e4:	96 e9       	ldi	r25, 0x96	; 150
     7e6:	bb 27       	eor	r27, r27
     7e8:	93 95       	inc	r25
     7ea:	f6 95       	lsr	r31
     7ec:	87 95       	ror	r24
     7ee:	77 95       	ror	r23
     7f0:	67 95       	ror	r22
     7f2:	b7 95       	ror	r27
     7f4:	f1 11       	cpse	r31, r1
     7f6:	f8 cf       	rjmp	.-16     	; 0x7e8 <__floatsisf+0x1c>
     7f8:	fa f4       	brpl	.+62     	; 0x838 <__EEPROM_REGION_LENGTH__+0x38>
     7fa:	bb 0f       	add	r27, r27
     7fc:	11 f4       	brne	.+4      	; 0x802 <__EEPROM_REGION_LENGTH__+0x2>
     7fe:	60 ff       	sbrs	r22, 0
     800:	1b c0       	rjmp	.+54     	; 0x838 <__EEPROM_REGION_LENGTH__+0x38>
     802:	6f 5f       	subi	r22, 0xFF	; 255
     804:	7f 4f       	sbci	r23, 0xFF	; 255
     806:	8f 4f       	sbci	r24, 0xFF	; 255
     808:	9f 4f       	sbci	r25, 0xFF	; 255
     80a:	16 c0       	rjmp	.+44     	; 0x838 <__EEPROM_REGION_LENGTH__+0x38>
     80c:	88 23       	and	r24, r24
     80e:	11 f0       	breq	.+4      	; 0x814 <__EEPROM_REGION_LENGTH__+0x14>
     810:	96 e9       	ldi	r25, 0x96	; 150
     812:	11 c0       	rjmp	.+34     	; 0x836 <__EEPROM_REGION_LENGTH__+0x36>
     814:	77 23       	and	r23, r23
     816:	21 f0       	breq	.+8      	; 0x820 <__EEPROM_REGION_LENGTH__+0x20>
     818:	9e e8       	ldi	r25, 0x8E	; 142
     81a:	87 2f       	mov	r24, r23
     81c:	76 2f       	mov	r23, r22
     81e:	05 c0       	rjmp	.+10     	; 0x82a <__EEPROM_REGION_LENGTH__+0x2a>
     820:	66 23       	and	r22, r22
     822:	71 f0       	breq	.+28     	; 0x840 <__EEPROM_REGION_LENGTH__+0x40>
     824:	96 e8       	ldi	r25, 0x86	; 134
     826:	86 2f       	mov	r24, r22
     828:	70 e0       	ldi	r23, 0x00	; 0
     82a:	60 e0       	ldi	r22, 0x00	; 0
     82c:	2a f0       	brmi	.+10     	; 0x838 <__EEPROM_REGION_LENGTH__+0x38>
     82e:	9a 95       	dec	r25
     830:	66 0f       	add	r22, r22
     832:	77 1f       	adc	r23, r23
     834:	88 1f       	adc	r24, r24
     836:	da f7       	brpl	.-10     	; 0x82e <__EEPROM_REGION_LENGTH__+0x2e>
     838:	88 0f       	add	r24, r24
     83a:	96 95       	lsr	r25
     83c:	87 95       	ror	r24
     83e:	97 f9       	bld	r25, 7
     840:	08 95       	ret

00000842 <__fp_inf>:
     842:	97 f9       	bld	r25, 7
     844:	9f 67       	ori	r25, 0x7F	; 127
     846:	80 e8       	ldi	r24, 0x80	; 128
     848:	70 e0       	ldi	r23, 0x00	; 0
     84a:	60 e0       	ldi	r22, 0x00	; 0
     84c:	08 95       	ret

0000084e <__fp_nan>:
     84e:	9f ef       	ldi	r25, 0xFF	; 255
     850:	80 ec       	ldi	r24, 0xC0	; 192
     852:	08 95       	ret

00000854 <__fp_pscA>:
     854:	00 24       	eor	r0, r0
     856:	0a 94       	dec	r0
     858:	16 16       	cp	r1, r22
     85a:	17 06       	cpc	r1, r23
     85c:	18 06       	cpc	r1, r24
     85e:	09 06       	cpc	r0, r25
     860:	08 95       	ret

00000862 <__fp_pscB>:
     862:	00 24       	eor	r0, r0
     864:	0a 94       	dec	r0
     866:	12 16       	cp	r1, r18
     868:	13 06       	cpc	r1, r19
     86a:	14 06       	cpc	r1, r20
     86c:	05 06       	cpc	r0, r21
     86e:	08 95       	ret

00000870 <__fp_round>:
     870:	09 2e       	mov	r0, r25
     872:	03 94       	inc	r0
     874:	00 0c       	add	r0, r0
     876:	11 f4       	brne	.+4      	; 0x87c <__fp_round+0xc>
     878:	88 23       	and	r24, r24
     87a:	52 f0       	brmi	.+20     	; 0x890 <__fp_round+0x20>
     87c:	bb 0f       	add	r27, r27
     87e:	40 f4       	brcc	.+16     	; 0x890 <__fp_round+0x20>
     880:	bf 2b       	or	r27, r31
     882:	11 f4       	brne	.+4      	; 0x888 <__fp_round+0x18>
     884:	60 ff       	sbrs	r22, 0
     886:	04 c0       	rjmp	.+8      	; 0x890 <__fp_round+0x20>
     888:	6f 5f       	subi	r22, 0xFF	; 255
     88a:	7f 4f       	sbci	r23, 0xFF	; 255
     88c:	8f 4f       	sbci	r24, 0xFF	; 255
     88e:	9f 4f       	sbci	r25, 0xFF	; 255
     890:	08 95       	ret

00000892 <__fp_split3>:
     892:	57 fd       	sbrc	r21, 7
     894:	90 58       	subi	r25, 0x80	; 128
     896:	44 0f       	add	r20, r20
     898:	55 1f       	adc	r21, r21
     89a:	59 f0       	breq	.+22     	; 0x8b2 <__fp_splitA+0x10>
     89c:	5f 3f       	cpi	r21, 0xFF	; 255
     89e:	71 f0       	breq	.+28     	; 0x8bc <__fp_splitA+0x1a>
     8a0:	47 95       	ror	r20

000008a2 <__fp_splitA>:
     8a2:	88 0f       	add	r24, r24
     8a4:	97 fb       	bst	r25, 7
     8a6:	99 1f       	adc	r25, r25
     8a8:	61 f0       	breq	.+24     	; 0x8c2 <__fp_splitA+0x20>
     8aa:	9f 3f       	cpi	r25, 0xFF	; 255
     8ac:	79 f0       	breq	.+30     	; 0x8cc <__fp_splitA+0x2a>
     8ae:	87 95       	ror	r24
     8b0:	08 95       	ret
     8b2:	12 16       	cp	r1, r18
     8b4:	13 06       	cpc	r1, r19
     8b6:	14 06       	cpc	r1, r20
     8b8:	55 1f       	adc	r21, r21
     8ba:	f2 cf       	rjmp	.-28     	; 0x8a0 <__fp_split3+0xe>
     8bc:	46 95       	lsr	r20
     8be:	f1 df       	rcall	.-30     	; 0x8a2 <__fp_splitA>
     8c0:	08 c0       	rjmp	.+16     	; 0x8d2 <__fp_splitA+0x30>
     8c2:	16 16       	cp	r1, r22
     8c4:	17 06       	cpc	r1, r23
     8c6:	18 06       	cpc	r1, r24
     8c8:	99 1f       	adc	r25, r25
     8ca:	f1 cf       	rjmp	.-30     	; 0x8ae <__fp_splitA+0xc>
     8cc:	86 95       	lsr	r24
     8ce:	71 05       	cpc	r23, r1
     8d0:	61 05       	cpc	r22, r1
     8d2:	08 94       	sec
     8d4:	08 95       	ret

000008d6 <__fp_zero>:
     8d6:	e8 94       	clt

000008d8 <__fp_szero>:
     8d8:	bb 27       	eor	r27, r27
     8da:	66 27       	eor	r22, r22
     8dc:	77 27       	eor	r23, r23
     8de:	cb 01       	movw	r24, r22
     8e0:	97 f9       	bld	r25, 7
     8e2:	08 95       	ret

000008e4 <__mulsf3>:
     8e4:	0e 94 85 04 	call	0x90a	; 0x90a <__mulsf3x>
     8e8:	0c 94 38 04 	jmp	0x870	; 0x870 <__fp_round>
     8ec:	0e 94 2a 04 	call	0x854	; 0x854 <__fp_pscA>
     8f0:	38 f0       	brcs	.+14     	; 0x900 <__mulsf3+0x1c>
     8f2:	0e 94 31 04 	call	0x862	; 0x862 <__fp_pscB>
     8f6:	20 f0       	brcs	.+8      	; 0x900 <__mulsf3+0x1c>
     8f8:	95 23       	and	r25, r21
     8fa:	11 f0       	breq	.+4      	; 0x900 <__mulsf3+0x1c>
     8fc:	0c 94 21 04 	jmp	0x842	; 0x842 <__fp_inf>
     900:	0c 94 27 04 	jmp	0x84e	; 0x84e <__fp_nan>
     904:	11 24       	eor	r1, r1
     906:	0c 94 6c 04 	jmp	0x8d8	; 0x8d8 <__fp_szero>

0000090a <__mulsf3x>:
     90a:	0e 94 49 04 	call	0x892	; 0x892 <__fp_split3>
     90e:	70 f3       	brcs	.-36     	; 0x8ec <__mulsf3+0x8>

00000910 <__mulsf3_pse>:
     910:	95 9f       	mul	r25, r21
     912:	c1 f3       	breq	.-16     	; 0x904 <__mulsf3+0x20>
     914:	95 0f       	add	r25, r21
     916:	50 e0       	ldi	r21, 0x00	; 0
     918:	55 1f       	adc	r21, r21
     91a:	62 9f       	mul	r22, r18
     91c:	f0 01       	movw	r30, r0
     91e:	72 9f       	mul	r23, r18
     920:	bb 27       	eor	r27, r27
     922:	f0 0d       	add	r31, r0
     924:	b1 1d       	adc	r27, r1
     926:	63 9f       	mul	r22, r19
     928:	aa 27       	eor	r26, r26
     92a:	f0 0d       	add	r31, r0
     92c:	b1 1d       	adc	r27, r1
     92e:	aa 1f       	adc	r26, r26
     930:	64 9f       	mul	r22, r20
     932:	66 27       	eor	r22, r22
     934:	b0 0d       	add	r27, r0
     936:	a1 1d       	adc	r26, r1
     938:	66 1f       	adc	r22, r22
     93a:	82 9f       	mul	r24, r18
     93c:	22 27       	eor	r18, r18
     93e:	b0 0d       	add	r27, r0
     940:	a1 1d       	adc	r26, r1
     942:	62 1f       	adc	r22, r18
     944:	73 9f       	mul	r23, r19
     946:	b0 0d       	add	r27, r0
     948:	a1 1d       	adc	r26, r1
     94a:	62 1f       	adc	r22, r18
     94c:	83 9f       	mul	r24, r19
     94e:	a0 0d       	add	r26, r0
     950:	61 1d       	adc	r22, r1
     952:	22 1f       	adc	r18, r18
     954:	74 9f       	mul	r23, r20
     956:	33 27       	eor	r19, r19
     958:	a0 0d       	add	r26, r0
     95a:	61 1d       	adc	r22, r1
     95c:	23 1f       	adc	r18, r19
     95e:	84 9f       	mul	r24, r20
     960:	60 0d       	add	r22, r0
     962:	21 1d       	adc	r18, r1
     964:	82 2f       	mov	r24, r18
     966:	76 2f       	mov	r23, r22
     968:	6a 2f       	mov	r22, r26
     96a:	11 24       	eor	r1, r1
     96c:	9f 57       	subi	r25, 0x7F	; 127
     96e:	50 40       	sbci	r21, 0x00	; 0
     970:	9a f0       	brmi	.+38     	; 0x998 <__mulsf3_pse+0x88>
     972:	f1 f0       	breq	.+60     	; 0x9b0 <__mulsf3_pse+0xa0>
     974:	88 23       	and	r24, r24
     976:	4a f0       	brmi	.+18     	; 0x98a <__mulsf3_pse+0x7a>
     978:	ee 0f       	add	r30, r30
     97a:	ff 1f       	adc	r31, r31
     97c:	bb 1f       	adc	r27, r27
     97e:	66 1f       	adc	r22, r22
     980:	77 1f       	adc	r23, r23
     982:	88 1f       	adc	r24, r24
     984:	91 50       	subi	r25, 0x01	; 1
     986:	50 40       	sbci	r21, 0x00	; 0
     988:	a9 f7       	brne	.-22     	; 0x974 <__mulsf3_pse+0x64>
     98a:	9e 3f       	cpi	r25, 0xFE	; 254
     98c:	51 05       	cpc	r21, r1
     98e:	80 f0       	brcs	.+32     	; 0x9b0 <__mulsf3_pse+0xa0>
     990:	0c 94 21 04 	jmp	0x842	; 0x842 <__fp_inf>
     994:	0c 94 6c 04 	jmp	0x8d8	; 0x8d8 <__fp_szero>
     998:	5f 3f       	cpi	r21, 0xFF	; 255
     99a:	e4 f3       	brlt	.-8      	; 0x994 <__mulsf3_pse+0x84>
     99c:	98 3e       	cpi	r25, 0xE8	; 232
     99e:	d4 f3       	brlt	.-12     	; 0x994 <__mulsf3_pse+0x84>
     9a0:	86 95       	lsr	r24
     9a2:	77 95       	ror	r23
     9a4:	67 95       	ror	r22
     9a6:	b7 95       	ror	r27
     9a8:	f7 95       	ror	r31
     9aa:	e7 95       	ror	r30
     9ac:	9f 5f       	subi	r25, 0xFF	; 255
     9ae:	c1 f7       	brne	.-16     	; 0x9a0 <__mulsf3_pse+0x90>
     9b0:	fe 2b       	or	r31, r30
     9b2:	88 0f       	add	r24, r24
     9b4:	91 1d       	adc	r25, r1
     9b6:	96 95       	lsr	r25
     9b8:	87 95       	ror	r24
     9ba:	97 f9       	bld	r25, 7
     9bc:	08 95       	ret

000009be <vfprintf>:
     9be:	a0 e1       	ldi	r26, 0x10	; 16
     9c0:	b0 e0       	ldi	r27, 0x00	; 0
     9c2:	e5 ee       	ldi	r30, 0xE5	; 229
     9c4:	f4 e0       	ldi	r31, 0x04	; 4
     9c6:	0c 94 70 08 	jmp	0x10e0	; 0x10e0 <__prologue_saves__>
     9ca:	7c 01       	movw	r14, r24
     9cc:	1b 01       	movw	r2, r22
     9ce:	6a 01       	movw	r12, r20
     9d0:	fc 01       	movw	r30, r24
     9d2:	17 82       	std	Z+7, r1	; 0x07
     9d4:	16 82       	std	Z+6, r1	; 0x06
     9d6:	83 81       	ldd	r24, Z+3	; 0x03
     9d8:	81 ff       	sbrs	r24, 1
     9da:	44 c3       	rjmp	.+1672   	; 0x1064 <__DATA_REGION_LENGTH__+0x64>
     9dc:	9e 01       	movw	r18, r28
     9de:	2f 5f       	subi	r18, 0xFF	; 255
     9e0:	3f 4f       	sbci	r19, 0xFF	; 255
     9e2:	39 01       	movw	r6, r18
     9e4:	f7 01       	movw	r30, r14
     9e6:	93 81       	ldd	r25, Z+3	; 0x03
     9e8:	f1 01       	movw	r30, r2
     9ea:	93 fd       	sbrc	r25, 3
     9ec:	85 91       	lpm	r24, Z+
     9ee:	93 ff       	sbrs	r25, 3
     9f0:	81 91       	ld	r24, Z+
     9f2:	1f 01       	movw	r2, r30
     9f4:	88 23       	and	r24, r24
     9f6:	09 f4       	brne	.+2      	; 0x9fa <vfprintf+0x3c>
     9f8:	31 c3       	rjmp	.+1634   	; 0x105c <__DATA_REGION_LENGTH__+0x5c>
     9fa:	85 32       	cpi	r24, 0x25	; 37
     9fc:	39 f4       	brne	.+14     	; 0xa0c <vfprintf+0x4e>
     9fe:	93 fd       	sbrc	r25, 3
     a00:	85 91       	lpm	r24, Z+
     a02:	93 ff       	sbrs	r25, 3
     a04:	81 91       	ld	r24, Z+
     a06:	1f 01       	movw	r2, r30
     a08:	85 32       	cpi	r24, 0x25	; 37
     a0a:	39 f4       	brne	.+14     	; 0xa1a <vfprintf+0x5c>
     a0c:	b7 01       	movw	r22, r14
     a0e:	90 e0       	ldi	r25, 0x00	; 0
     a10:	0e 94 a9 09 	call	0x1352	; 0x1352 <fputc>
     a14:	56 01       	movw	r10, r12
     a16:	65 01       	movw	r12, r10
     a18:	e5 cf       	rjmp	.-54     	; 0x9e4 <vfprintf+0x26>
     a1a:	10 e0       	ldi	r17, 0x00	; 0
     a1c:	51 2c       	mov	r5, r1
     a1e:	91 2c       	mov	r9, r1
     a20:	ff e1       	ldi	r31, 0x1F	; 31
     a22:	f9 15       	cp	r31, r9
     a24:	d8 f0       	brcs	.+54     	; 0xa5c <vfprintf+0x9e>
     a26:	8b 32       	cpi	r24, 0x2B	; 43
     a28:	79 f0       	breq	.+30     	; 0xa48 <vfprintf+0x8a>
     a2a:	38 f4       	brcc	.+14     	; 0xa3a <vfprintf+0x7c>
     a2c:	80 32       	cpi	r24, 0x20	; 32
     a2e:	79 f0       	breq	.+30     	; 0xa4e <vfprintf+0x90>
     a30:	83 32       	cpi	r24, 0x23	; 35
     a32:	a1 f4       	brne	.+40     	; 0xa5c <vfprintf+0x9e>
     a34:	f9 2d       	mov	r31, r9
     a36:	f0 61       	ori	r31, 0x10	; 16
     a38:	2e c0       	rjmp	.+92     	; 0xa96 <vfprintf+0xd8>
     a3a:	8d 32       	cpi	r24, 0x2D	; 45
     a3c:	61 f0       	breq	.+24     	; 0xa56 <vfprintf+0x98>
     a3e:	80 33       	cpi	r24, 0x30	; 48
     a40:	69 f4       	brne	.+26     	; 0xa5c <vfprintf+0x9e>
     a42:	29 2d       	mov	r18, r9
     a44:	21 60       	ori	r18, 0x01	; 1
     a46:	2d c0       	rjmp	.+90     	; 0xaa2 <vfprintf+0xe4>
     a48:	39 2d       	mov	r19, r9
     a4a:	32 60       	ori	r19, 0x02	; 2
     a4c:	93 2e       	mov	r9, r19
     a4e:	89 2d       	mov	r24, r9
     a50:	84 60       	ori	r24, 0x04	; 4
     a52:	98 2e       	mov	r9, r24
     a54:	2a c0       	rjmp	.+84     	; 0xaaa <vfprintf+0xec>
     a56:	e9 2d       	mov	r30, r9
     a58:	e8 60       	ori	r30, 0x08	; 8
     a5a:	15 c0       	rjmp	.+42     	; 0xa86 <vfprintf+0xc8>
     a5c:	97 fc       	sbrc	r9, 7
     a5e:	2d c0       	rjmp	.+90     	; 0xaba <vfprintf+0xfc>
     a60:	20 ed       	ldi	r18, 0xD0	; 208
     a62:	28 0f       	add	r18, r24
     a64:	2a 30       	cpi	r18, 0x0A	; 10
     a66:	88 f4       	brcc	.+34     	; 0xa8a <vfprintf+0xcc>
     a68:	96 fe       	sbrs	r9, 6
     a6a:	06 c0       	rjmp	.+12     	; 0xa78 <vfprintf+0xba>
     a6c:	3a e0       	ldi	r19, 0x0A	; 10
     a6e:	13 9f       	mul	r17, r19
     a70:	20 0d       	add	r18, r0
     a72:	11 24       	eor	r1, r1
     a74:	12 2f       	mov	r17, r18
     a76:	19 c0       	rjmp	.+50     	; 0xaaa <vfprintf+0xec>
     a78:	8a e0       	ldi	r24, 0x0A	; 10
     a7a:	58 9e       	mul	r5, r24
     a7c:	20 0d       	add	r18, r0
     a7e:	11 24       	eor	r1, r1
     a80:	52 2e       	mov	r5, r18
     a82:	e9 2d       	mov	r30, r9
     a84:	e0 62       	ori	r30, 0x20	; 32
     a86:	9e 2e       	mov	r9, r30
     a88:	10 c0       	rjmp	.+32     	; 0xaaa <vfprintf+0xec>
     a8a:	8e 32       	cpi	r24, 0x2E	; 46
     a8c:	31 f4       	brne	.+12     	; 0xa9a <vfprintf+0xdc>
     a8e:	96 fc       	sbrc	r9, 6
     a90:	e5 c2       	rjmp	.+1482   	; 0x105c <__DATA_REGION_LENGTH__+0x5c>
     a92:	f9 2d       	mov	r31, r9
     a94:	f0 64       	ori	r31, 0x40	; 64
     a96:	9f 2e       	mov	r9, r31
     a98:	08 c0       	rjmp	.+16     	; 0xaaa <vfprintf+0xec>
     a9a:	8c 36       	cpi	r24, 0x6C	; 108
     a9c:	21 f4       	brne	.+8      	; 0xaa6 <vfprintf+0xe8>
     a9e:	29 2d       	mov	r18, r9
     aa0:	20 68       	ori	r18, 0x80	; 128
     aa2:	92 2e       	mov	r9, r18
     aa4:	02 c0       	rjmp	.+4      	; 0xaaa <vfprintf+0xec>
     aa6:	88 36       	cpi	r24, 0x68	; 104
     aa8:	41 f4       	brne	.+16     	; 0xaba <vfprintf+0xfc>
     aaa:	f1 01       	movw	r30, r2
     aac:	93 fd       	sbrc	r25, 3
     aae:	85 91       	lpm	r24, Z+
     ab0:	93 ff       	sbrs	r25, 3
     ab2:	81 91       	ld	r24, Z+
     ab4:	1f 01       	movw	r2, r30
     ab6:	81 11       	cpse	r24, r1
     ab8:	b3 cf       	rjmp	.-154    	; 0xa20 <vfprintf+0x62>
     aba:	9b eb       	ldi	r25, 0xBB	; 187
     abc:	98 0f       	add	r25, r24
     abe:	93 30       	cpi	r25, 0x03	; 3
     ac0:	20 f4       	brcc	.+8      	; 0xaca <vfprintf+0x10c>
     ac2:	99 2d       	mov	r25, r9
     ac4:	90 61       	ori	r25, 0x10	; 16
     ac6:	80 5e       	subi	r24, 0xE0	; 224
     ac8:	07 c0       	rjmp	.+14     	; 0xad8 <vfprintf+0x11a>
     aca:	9b e9       	ldi	r25, 0x9B	; 155
     acc:	98 0f       	add	r25, r24
     ace:	93 30       	cpi	r25, 0x03	; 3
     ad0:	08 f0       	brcs	.+2      	; 0xad4 <vfprintf+0x116>
     ad2:	66 c1       	rjmp	.+716    	; 0xda0 <vfprintf+0x3e2>
     ad4:	99 2d       	mov	r25, r9
     ad6:	9f 7e       	andi	r25, 0xEF	; 239
     ad8:	96 ff       	sbrs	r25, 6
     ada:	16 e0       	ldi	r17, 0x06	; 6
     adc:	9f 73       	andi	r25, 0x3F	; 63
     ade:	99 2e       	mov	r9, r25
     ae0:	85 36       	cpi	r24, 0x65	; 101
     ae2:	19 f4       	brne	.+6      	; 0xaea <vfprintf+0x12c>
     ae4:	90 64       	ori	r25, 0x40	; 64
     ae6:	99 2e       	mov	r9, r25
     ae8:	08 c0       	rjmp	.+16     	; 0xafa <vfprintf+0x13c>
     aea:	86 36       	cpi	r24, 0x66	; 102
     aec:	21 f4       	brne	.+8      	; 0xaf6 <vfprintf+0x138>
     aee:	39 2f       	mov	r19, r25
     af0:	30 68       	ori	r19, 0x80	; 128
     af2:	93 2e       	mov	r9, r19
     af4:	02 c0       	rjmp	.+4      	; 0xafa <vfprintf+0x13c>
     af6:	11 11       	cpse	r17, r1
     af8:	11 50       	subi	r17, 0x01	; 1
     afa:	97 fe       	sbrs	r9, 7
     afc:	07 c0       	rjmp	.+14     	; 0xb0c <vfprintf+0x14e>
     afe:	1c 33       	cpi	r17, 0x3C	; 60
     b00:	50 f4       	brcc	.+20     	; 0xb16 <vfprintf+0x158>
     b02:	44 24       	eor	r4, r4
     b04:	43 94       	inc	r4
     b06:	41 0e       	add	r4, r17
     b08:	27 e0       	ldi	r18, 0x07	; 7
     b0a:	0b c0       	rjmp	.+22     	; 0xb22 <vfprintf+0x164>
     b0c:	18 30       	cpi	r17, 0x08	; 8
     b0e:	38 f0       	brcs	.+14     	; 0xb1e <vfprintf+0x160>
     b10:	27 e0       	ldi	r18, 0x07	; 7
     b12:	17 e0       	ldi	r17, 0x07	; 7
     b14:	05 c0       	rjmp	.+10     	; 0xb20 <vfprintf+0x162>
     b16:	27 e0       	ldi	r18, 0x07	; 7
     b18:	9c e3       	ldi	r25, 0x3C	; 60
     b1a:	49 2e       	mov	r4, r25
     b1c:	02 c0       	rjmp	.+4      	; 0xb22 <vfprintf+0x164>
     b1e:	21 2f       	mov	r18, r17
     b20:	41 2c       	mov	r4, r1
     b22:	56 01       	movw	r10, r12
     b24:	84 e0       	ldi	r24, 0x04	; 4
     b26:	a8 0e       	add	r10, r24
     b28:	b1 1c       	adc	r11, r1
     b2a:	f6 01       	movw	r30, r12
     b2c:	60 81       	ld	r22, Z
     b2e:	71 81       	ldd	r23, Z+1	; 0x01
     b30:	82 81       	ldd	r24, Z+2	; 0x02
     b32:	93 81       	ldd	r25, Z+3	; 0x03
     b34:	04 2d       	mov	r16, r4
     b36:	a3 01       	movw	r20, r6
     b38:	0e 94 bb 08 	call	0x1176	; 0x1176 <__ftoa_engine>
     b3c:	6c 01       	movw	r12, r24
     b3e:	f9 81       	ldd	r31, Y+1	; 0x01
     b40:	fc 87       	std	Y+12, r31	; 0x0c
     b42:	f0 ff       	sbrs	r31, 0
     b44:	02 c0       	rjmp	.+4      	; 0xb4a <vfprintf+0x18c>
     b46:	f3 ff       	sbrs	r31, 3
     b48:	06 c0       	rjmp	.+12     	; 0xb56 <vfprintf+0x198>
     b4a:	91 fc       	sbrc	r9, 1
     b4c:	06 c0       	rjmp	.+12     	; 0xb5a <vfprintf+0x19c>
     b4e:	92 fe       	sbrs	r9, 2
     b50:	06 c0       	rjmp	.+12     	; 0xb5e <vfprintf+0x1a0>
     b52:	00 e2       	ldi	r16, 0x20	; 32
     b54:	05 c0       	rjmp	.+10     	; 0xb60 <vfprintf+0x1a2>
     b56:	0d e2       	ldi	r16, 0x2D	; 45
     b58:	03 c0       	rjmp	.+6      	; 0xb60 <vfprintf+0x1a2>
     b5a:	0b e2       	ldi	r16, 0x2B	; 43
     b5c:	01 c0       	rjmp	.+2      	; 0xb60 <vfprintf+0x1a2>
     b5e:	00 e0       	ldi	r16, 0x00	; 0
     b60:	8c 85       	ldd	r24, Y+12	; 0x0c
     b62:	8c 70       	andi	r24, 0x0C	; 12
     b64:	19 f0       	breq	.+6      	; 0xb6c <vfprintf+0x1ae>
     b66:	01 11       	cpse	r16, r1
     b68:	5a c2       	rjmp	.+1204   	; 0x101e <__DATA_REGION_LENGTH__+0x1e>
     b6a:	9b c2       	rjmp	.+1334   	; 0x10a2 <__DATA_REGION_LENGTH__+0xa2>
     b6c:	97 fe       	sbrs	r9, 7
     b6e:	10 c0       	rjmp	.+32     	; 0xb90 <vfprintf+0x1d2>
     b70:	4c 0c       	add	r4, r12
     b72:	fc 85       	ldd	r31, Y+12	; 0x0c
     b74:	f4 ff       	sbrs	r31, 4
     b76:	04 c0       	rjmp	.+8      	; 0xb80 <vfprintf+0x1c2>
     b78:	8a 81       	ldd	r24, Y+2	; 0x02
     b7a:	81 33       	cpi	r24, 0x31	; 49
     b7c:	09 f4       	brne	.+2      	; 0xb80 <vfprintf+0x1c2>
     b7e:	4a 94       	dec	r4
     b80:	14 14       	cp	r1, r4
     b82:	74 f5       	brge	.+92     	; 0xbe0 <vfprintf+0x222>
     b84:	28 e0       	ldi	r18, 0x08	; 8
     b86:	24 15       	cp	r18, r4
     b88:	78 f5       	brcc	.+94     	; 0xbe8 <vfprintf+0x22a>
     b8a:	88 e0       	ldi	r24, 0x08	; 8
     b8c:	48 2e       	mov	r4, r24
     b8e:	2c c0       	rjmp	.+88     	; 0xbe8 <vfprintf+0x22a>
     b90:	96 fc       	sbrc	r9, 6
     b92:	2a c0       	rjmp	.+84     	; 0xbe8 <vfprintf+0x22a>
     b94:	81 2f       	mov	r24, r17
     b96:	90 e0       	ldi	r25, 0x00	; 0
     b98:	8c 15       	cp	r24, r12
     b9a:	9d 05       	cpc	r25, r13
     b9c:	9c f0       	brlt	.+38     	; 0xbc4 <vfprintf+0x206>
     b9e:	3c ef       	ldi	r19, 0xFC	; 252
     ba0:	c3 16       	cp	r12, r19
     ba2:	3f ef       	ldi	r19, 0xFF	; 255
     ba4:	d3 06       	cpc	r13, r19
     ba6:	74 f0       	brlt	.+28     	; 0xbc4 <vfprintf+0x206>
     ba8:	89 2d       	mov	r24, r9
     baa:	80 68       	ori	r24, 0x80	; 128
     bac:	98 2e       	mov	r9, r24
     bae:	0a c0       	rjmp	.+20     	; 0xbc4 <vfprintf+0x206>
     bb0:	e2 e0       	ldi	r30, 0x02	; 2
     bb2:	f0 e0       	ldi	r31, 0x00	; 0
     bb4:	ec 0f       	add	r30, r28
     bb6:	fd 1f       	adc	r31, r29
     bb8:	e1 0f       	add	r30, r17
     bba:	f1 1d       	adc	r31, r1
     bbc:	80 81       	ld	r24, Z
     bbe:	80 33       	cpi	r24, 0x30	; 48
     bc0:	19 f4       	brne	.+6      	; 0xbc8 <vfprintf+0x20a>
     bc2:	11 50       	subi	r17, 0x01	; 1
     bc4:	11 11       	cpse	r17, r1
     bc6:	f4 cf       	rjmp	.-24     	; 0xbb0 <vfprintf+0x1f2>
     bc8:	97 fe       	sbrs	r9, 7
     bca:	0e c0       	rjmp	.+28     	; 0xbe8 <vfprintf+0x22a>
     bcc:	44 24       	eor	r4, r4
     bce:	43 94       	inc	r4
     bd0:	41 0e       	add	r4, r17
     bd2:	81 2f       	mov	r24, r17
     bd4:	90 e0       	ldi	r25, 0x00	; 0
     bd6:	c8 16       	cp	r12, r24
     bd8:	d9 06       	cpc	r13, r25
     bda:	2c f4       	brge	.+10     	; 0xbe6 <vfprintf+0x228>
     bdc:	1c 19       	sub	r17, r12
     bde:	04 c0       	rjmp	.+8      	; 0xbe8 <vfprintf+0x22a>
     be0:	44 24       	eor	r4, r4
     be2:	43 94       	inc	r4
     be4:	01 c0       	rjmp	.+2      	; 0xbe8 <vfprintf+0x22a>
     be6:	10 e0       	ldi	r17, 0x00	; 0
     be8:	97 fe       	sbrs	r9, 7
     bea:	06 c0       	rjmp	.+12     	; 0xbf8 <vfprintf+0x23a>
     bec:	1c 14       	cp	r1, r12
     bee:	1d 04       	cpc	r1, r13
     bf0:	34 f4       	brge	.+12     	; 0xbfe <vfprintf+0x240>
     bf2:	c6 01       	movw	r24, r12
     bf4:	01 96       	adiw	r24, 0x01	; 1
     bf6:	05 c0       	rjmp	.+10     	; 0xc02 <vfprintf+0x244>
     bf8:	85 e0       	ldi	r24, 0x05	; 5
     bfa:	90 e0       	ldi	r25, 0x00	; 0
     bfc:	02 c0       	rjmp	.+4      	; 0xc02 <vfprintf+0x244>
     bfe:	81 e0       	ldi	r24, 0x01	; 1
     c00:	90 e0       	ldi	r25, 0x00	; 0
     c02:	01 11       	cpse	r16, r1
     c04:	01 96       	adiw	r24, 0x01	; 1
     c06:	11 23       	and	r17, r17
     c08:	31 f0       	breq	.+12     	; 0xc16 <vfprintf+0x258>
     c0a:	21 2f       	mov	r18, r17
     c0c:	30 e0       	ldi	r19, 0x00	; 0
     c0e:	2f 5f       	subi	r18, 0xFF	; 255
     c10:	3f 4f       	sbci	r19, 0xFF	; 255
     c12:	82 0f       	add	r24, r18
     c14:	93 1f       	adc	r25, r19
     c16:	25 2d       	mov	r18, r5
     c18:	30 e0       	ldi	r19, 0x00	; 0
     c1a:	82 17       	cp	r24, r18
     c1c:	93 07       	cpc	r25, r19
     c1e:	14 f4       	brge	.+4      	; 0xc24 <vfprintf+0x266>
     c20:	58 1a       	sub	r5, r24
     c22:	01 c0       	rjmp	.+2      	; 0xc26 <vfprintf+0x268>
     c24:	51 2c       	mov	r5, r1
     c26:	89 2d       	mov	r24, r9
     c28:	89 70       	andi	r24, 0x09	; 9
     c2a:	49 f4       	brne	.+18     	; 0xc3e <vfprintf+0x280>
     c2c:	55 20       	and	r5, r5
     c2e:	39 f0       	breq	.+14     	; 0xc3e <vfprintf+0x280>
     c30:	b7 01       	movw	r22, r14
     c32:	80 e2       	ldi	r24, 0x20	; 32
     c34:	90 e0       	ldi	r25, 0x00	; 0
     c36:	0e 94 a9 09 	call	0x1352	; 0x1352 <fputc>
     c3a:	5a 94       	dec	r5
     c3c:	f7 cf       	rjmp	.-18     	; 0xc2c <vfprintf+0x26e>
     c3e:	00 23       	and	r16, r16
     c40:	29 f0       	breq	.+10     	; 0xc4c <vfprintf+0x28e>
     c42:	b7 01       	movw	r22, r14
     c44:	80 2f       	mov	r24, r16
     c46:	90 e0       	ldi	r25, 0x00	; 0
     c48:	0e 94 a9 09 	call	0x1352	; 0x1352 <fputc>
     c4c:	93 fc       	sbrc	r9, 3
     c4e:	09 c0       	rjmp	.+18     	; 0xc62 <vfprintf+0x2a4>
     c50:	55 20       	and	r5, r5
     c52:	39 f0       	breq	.+14     	; 0xc62 <vfprintf+0x2a4>
     c54:	b7 01       	movw	r22, r14
     c56:	80 e3       	ldi	r24, 0x30	; 48
     c58:	90 e0       	ldi	r25, 0x00	; 0
     c5a:	0e 94 a9 09 	call	0x1352	; 0x1352 <fputc>
     c5e:	5a 94       	dec	r5
     c60:	f7 cf       	rjmp	.-18     	; 0xc50 <vfprintf+0x292>
     c62:	97 fe       	sbrs	r9, 7
     c64:	4c c0       	rjmp	.+152    	; 0xcfe <vfprintf+0x340>
     c66:	46 01       	movw	r8, r12
     c68:	d7 fe       	sbrs	r13, 7
     c6a:	02 c0       	rjmp	.+4      	; 0xc70 <vfprintf+0x2b2>
     c6c:	81 2c       	mov	r8, r1
     c6e:	91 2c       	mov	r9, r1
     c70:	c6 01       	movw	r24, r12
     c72:	88 19       	sub	r24, r8
     c74:	99 09       	sbc	r25, r9
     c76:	f3 01       	movw	r30, r6
     c78:	e8 0f       	add	r30, r24
     c7a:	f9 1f       	adc	r31, r25
     c7c:	fe 87       	std	Y+14, r31	; 0x0e
     c7e:	ed 87       	std	Y+13, r30	; 0x0d
     c80:	96 01       	movw	r18, r12
     c82:	24 19       	sub	r18, r4
     c84:	31 09       	sbc	r19, r1
     c86:	38 8b       	std	Y+16, r19	; 0x10
     c88:	2f 87       	std	Y+15, r18	; 0x0f
     c8a:	01 2f       	mov	r16, r17
     c8c:	10 e0       	ldi	r17, 0x00	; 0
     c8e:	11 95       	neg	r17
     c90:	01 95       	neg	r16
     c92:	11 09       	sbc	r17, r1
     c94:	3f ef       	ldi	r19, 0xFF	; 255
     c96:	83 16       	cp	r8, r19
     c98:	93 06       	cpc	r9, r19
     c9a:	29 f4       	brne	.+10     	; 0xca6 <vfprintf+0x2e8>
     c9c:	b7 01       	movw	r22, r14
     c9e:	8e e2       	ldi	r24, 0x2E	; 46
     ca0:	90 e0       	ldi	r25, 0x00	; 0
     ca2:	0e 94 a9 09 	call	0x1352	; 0x1352 <fputc>
     ca6:	c8 14       	cp	r12, r8
     ca8:	d9 04       	cpc	r13, r9
     caa:	4c f0       	brlt	.+18     	; 0xcbe <vfprintf+0x300>
     cac:	8f 85       	ldd	r24, Y+15	; 0x0f
     cae:	98 89       	ldd	r25, Y+16	; 0x10
     cb0:	88 15       	cp	r24, r8
     cb2:	99 05       	cpc	r25, r9
     cb4:	24 f4       	brge	.+8      	; 0xcbe <vfprintf+0x300>
     cb6:	ed 85       	ldd	r30, Y+13	; 0x0d
     cb8:	fe 85       	ldd	r31, Y+14	; 0x0e
     cba:	81 81       	ldd	r24, Z+1	; 0x01
     cbc:	01 c0       	rjmp	.+2      	; 0xcc0 <vfprintf+0x302>
     cbe:	80 e3       	ldi	r24, 0x30	; 48
     cc0:	f1 e0       	ldi	r31, 0x01	; 1
     cc2:	8f 1a       	sub	r8, r31
     cc4:	91 08       	sbc	r9, r1
     cc6:	2d 85       	ldd	r18, Y+13	; 0x0d
     cc8:	3e 85       	ldd	r19, Y+14	; 0x0e
     cca:	2f 5f       	subi	r18, 0xFF	; 255
     ccc:	3f 4f       	sbci	r19, 0xFF	; 255
     cce:	3e 87       	std	Y+14, r19	; 0x0e
     cd0:	2d 87       	std	Y+13, r18	; 0x0d
     cd2:	80 16       	cp	r8, r16
     cd4:	91 06       	cpc	r9, r17
     cd6:	2c f0       	brlt	.+10     	; 0xce2 <vfprintf+0x324>
     cd8:	b7 01       	movw	r22, r14
     cda:	90 e0       	ldi	r25, 0x00	; 0
     cdc:	0e 94 a9 09 	call	0x1352	; 0x1352 <fputc>
     ce0:	d9 cf       	rjmp	.-78     	; 0xc94 <vfprintf+0x2d6>
     ce2:	c8 14       	cp	r12, r8
     ce4:	d9 04       	cpc	r13, r9
     ce6:	41 f4       	brne	.+16     	; 0xcf8 <vfprintf+0x33a>
     ce8:	9a 81       	ldd	r25, Y+2	; 0x02
     cea:	96 33       	cpi	r25, 0x36	; 54
     cec:	20 f4       	brcc	.+8      	; 0xcf6 <vfprintf+0x338>
     cee:	95 33       	cpi	r25, 0x35	; 53
     cf0:	19 f4       	brne	.+6      	; 0xcf8 <vfprintf+0x33a>
     cf2:	3c 85       	ldd	r19, Y+12	; 0x0c
     cf4:	34 ff       	sbrs	r19, 4
     cf6:	81 e3       	ldi	r24, 0x31	; 49
     cf8:	b7 01       	movw	r22, r14
     cfa:	90 e0       	ldi	r25, 0x00	; 0
     cfc:	4e c0       	rjmp	.+156    	; 0xd9a <vfprintf+0x3dc>
     cfe:	8a 81       	ldd	r24, Y+2	; 0x02
     d00:	81 33       	cpi	r24, 0x31	; 49
     d02:	19 f0       	breq	.+6      	; 0xd0a <vfprintf+0x34c>
     d04:	9c 85       	ldd	r25, Y+12	; 0x0c
     d06:	9f 7e       	andi	r25, 0xEF	; 239
     d08:	9c 87       	std	Y+12, r25	; 0x0c
     d0a:	b7 01       	movw	r22, r14
     d0c:	90 e0       	ldi	r25, 0x00	; 0
     d0e:	0e 94 a9 09 	call	0x1352	; 0x1352 <fputc>
     d12:	11 11       	cpse	r17, r1
     d14:	05 c0       	rjmp	.+10     	; 0xd20 <vfprintf+0x362>
     d16:	94 fc       	sbrc	r9, 4
     d18:	18 c0       	rjmp	.+48     	; 0xd4a <vfprintf+0x38c>
     d1a:	85 e6       	ldi	r24, 0x65	; 101
     d1c:	90 e0       	ldi	r25, 0x00	; 0
     d1e:	17 c0       	rjmp	.+46     	; 0xd4e <vfprintf+0x390>
     d20:	b7 01       	movw	r22, r14
     d22:	8e e2       	ldi	r24, 0x2E	; 46
     d24:	90 e0       	ldi	r25, 0x00	; 0
     d26:	0e 94 a9 09 	call	0x1352	; 0x1352 <fputc>
     d2a:	1e 5f       	subi	r17, 0xFE	; 254
     d2c:	82 e0       	ldi	r24, 0x02	; 2
     d2e:	01 e0       	ldi	r16, 0x01	; 1
     d30:	08 0f       	add	r16, r24
     d32:	f3 01       	movw	r30, r6
     d34:	e8 0f       	add	r30, r24
     d36:	f1 1d       	adc	r31, r1
     d38:	80 81       	ld	r24, Z
     d3a:	b7 01       	movw	r22, r14
     d3c:	90 e0       	ldi	r25, 0x00	; 0
     d3e:	0e 94 a9 09 	call	0x1352	; 0x1352 <fputc>
     d42:	80 2f       	mov	r24, r16
     d44:	01 13       	cpse	r16, r17
     d46:	f3 cf       	rjmp	.-26     	; 0xd2e <vfprintf+0x370>
     d48:	e6 cf       	rjmp	.-52     	; 0xd16 <vfprintf+0x358>
     d4a:	85 e4       	ldi	r24, 0x45	; 69
     d4c:	90 e0       	ldi	r25, 0x00	; 0
     d4e:	b7 01       	movw	r22, r14
     d50:	0e 94 a9 09 	call	0x1352	; 0x1352 <fputc>
     d54:	d7 fc       	sbrc	r13, 7
     d56:	06 c0       	rjmp	.+12     	; 0xd64 <vfprintf+0x3a6>
     d58:	c1 14       	cp	r12, r1
     d5a:	d1 04       	cpc	r13, r1
     d5c:	41 f4       	brne	.+16     	; 0xd6e <vfprintf+0x3b0>
     d5e:	ec 85       	ldd	r30, Y+12	; 0x0c
     d60:	e4 ff       	sbrs	r30, 4
     d62:	05 c0       	rjmp	.+10     	; 0xd6e <vfprintf+0x3b0>
     d64:	d1 94       	neg	r13
     d66:	c1 94       	neg	r12
     d68:	d1 08       	sbc	r13, r1
     d6a:	8d e2       	ldi	r24, 0x2D	; 45
     d6c:	01 c0       	rjmp	.+2      	; 0xd70 <vfprintf+0x3b2>
     d6e:	8b e2       	ldi	r24, 0x2B	; 43
     d70:	b7 01       	movw	r22, r14
     d72:	90 e0       	ldi	r25, 0x00	; 0
     d74:	0e 94 a9 09 	call	0x1352	; 0x1352 <fputc>
     d78:	80 e3       	ldi	r24, 0x30	; 48
     d7a:	2a e0       	ldi	r18, 0x0A	; 10
     d7c:	c2 16       	cp	r12, r18
     d7e:	d1 04       	cpc	r13, r1
     d80:	2c f0       	brlt	.+10     	; 0xd8c <vfprintf+0x3ce>
     d82:	8f 5f       	subi	r24, 0xFF	; 255
     d84:	fa e0       	ldi	r31, 0x0A	; 10
     d86:	cf 1a       	sub	r12, r31
     d88:	d1 08       	sbc	r13, r1
     d8a:	f7 cf       	rjmp	.-18     	; 0xd7a <vfprintf+0x3bc>
     d8c:	b7 01       	movw	r22, r14
     d8e:	90 e0       	ldi	r25, 0x00	; 0
     d90:	0e 94 a9 09 	call	0x1352	; 0x1352 <fputc>
     d94:	b7 01       	movw	r22, r14
     d96:	c6 01       	movw	r24, r12
     d98:	c0 96       	adiw	r24, 0x30	; 48
     d9a:	0e 94 a9 09 	call	0x1352	; 0x1352 <fputc>
     d9e:	54 c1       	rjmp	.+680    	; 0x1048 <__DATA_REGION_LENGTH__+0x48>
     da0:	83 36       	cpi	r24, 0x63	; 99
     da2:	31 f0       	breq	.+12     	; 0xdb0 <vfprintf+0x3f2>
     da4:	83 37       	cpi	r24, 0x73	; 115
     da6:	79 f0       	breq	.+30     	; 0xdc6 <vfprintf+0x408>
     da8:	83 35       	cpi	r24, 0x53	; 83
     daa:	09 f0       	breq	.+2      	; 0xdae <vfprintf+0x3f0>
     dac:	56 c0       	rjmp	.+172    	; 0xe5a <vfprintf+0x49c>
     dae:	20 c0       	rjmp	.+64     	; 0xdf0 <vfprintf+0x432>
     db0:	56 01       	movw	r10, r12
     db2:	32 e0       	ldi	r19, 0x02	; 2
     db4:	a3 0e       	add	r10, r19
     db6:	b1 1c       	adc	r11, r1
     db8:	f6 01       	movw	r30, r12
     dba:	80 81       	ld	r24, Z
     dbc:	89 83       	std	Y+1, r24	; 0x01
     dbe:	01 e0       	ldi	r16, 0x01	; 1
     dc0:	10 e0       	ldi	r17, 0x00	; 0
     dc2:	63 01       	movw	r12, r6
     dc4:	12 c0       	rjmp	.+36     	; 0xdea <vfprintf+0x42c>
     dc6:	56 01       	movw	r10, r12
     dc8:	f2 e0       	ldi	r31, 0x02	; 2
     dca:	af 0e       	add	r10, r31
     dcc:	b1 1c       	adc	r11, r1
     dce:	f6 01       	movw	r30, r12
     dd0:	c0 80       	ld	r12, Z
     dd2:	d1 80       	ldd	r13, Z+1	; 0x01
     dd4:	96 fe       	sbrs	r9, 6
     dd6:	03 c0       	rjmp	.+6      	; 0xdde <vfprintf+0x420>
     dd8:	61 2f       	mov	r22, r17
     dda:	70 e0       	ldi	r23, 0x00	; 0
     ddc:	02 c0       	rjmp	.+4      	; 0xde2 <vfprintf+0x424>
     dde:	6f ef       	ldi	r22, 0xFF	; 255
     de0:	7f ef       	ldi	r23, 0xFF	; 255
     de2:	c6 01       	movw	r24, r12
     de4:	0e 94 9e 09 	call	0x133c	; 0x133c <strnlen>
     de8:	8c 01       	movw	r16, r24
     dea:	f9 2d       	mov	r31, r9
     dec:	ff 77       	andi	r31, 0x7F	; 127
     dee:	14 c0       	rjmp	.+40     	; 0xe18 <vfprintf+0x45a>
     df0:	56 01       	movw	r10, r12
     df2:	22 e0       	ldi	r18, 0x02	; 2
     df4:	a2 0e       	add	r10, r18
     df6:	b1 1c       	adc	r11, r1
     df8:	f6 01       	movw	r30, r12
     dfa:	c0 80       	ld	r12, Z
     dfc:	d1 80       	ldd	r13, Z+1	; 0x01
     dfe:	96 fe       	sbrs	r9, 6
     e00:	03 c0       	rjmp	.+6      	; 0xe08 <vfprintf+0x44a>
     e02:	61 2f       	mov	r22, r17
     e04:	70 e0       	ldi	r23, 0x00	; 0
     e06:	02 c0       	rjmp	.+4      	; 0xe0c <vfprintf+0x44e>
     e08:	6f ef       	ldi	r22, 0xFF	; 255
     e0a:	7f ef       	ldi	r23, 0xFF	; 255
     e0c:	c6 01       	movw	r24, r12
     e0e:	0e 94 93 09 	call	0x1326	; 0x1326 <strnlen_P>
     e12:	8c 01       	movw	r16, r24
     e14:	f9 2d       	mov	r31, r9
     e16:	f0 68       	ori	r31, 0x80	; 128
     e18:	9f 2e       	mov	r9, r31
     e1a:	f3 fd       	sbrc	r31, 3
     e1c:	1a c0       	rjmp	.+52     	; 0xe52 <vfprintf+0x494>
     e1e:	85 2d       	mov	r24, r5
     e20:	90 e0       	ldi	r25, 0x00	; 0
     e22:	08 17       	cp	r16, r24
     e24:	19 07       	cpc	r17, r25
     e26:	a8 f4       	brcc	.+42     	; 0xe52 <vfprintf+0x494>
     e28:	b7 01       	movw	r22, r14
     e2a:	80 e2       	ldi	r24, 0x20	; 32
     e2c:	90 e0       	ldi	r25, 0x00	; 0
     e2e:	0e 94 a9 09 	call	0x1352	; 0x1352 <fputc>
     e32:	5a 94       	dec	r5
     e34:	f4 cf       	rjmp	.-24     	; 0xe1e <vfprintf+0x460>
     e36:	f6 01       	movw	r30, r12
     e38:	97 fc       	sbrc	r9, 7
     e3a:	85 91       	lpm	r24, Z+
     e3c:	97 fe       	sbrs	r9, 7
     e3e:	81 91       	ld	r24, Z+
     e40:	6f 01       	movw	r12, r30
     e42:	b7 01       	movw	r22, r14
     e44:	90 e0       	ldi	r25, 0x00	; 0
     e46:	0e 94 a9 09 	call	0x1352	; 0x1352 <fputc>
     e4a:	51 10       	cpse	r5, r1
     e4c:	5a 94       	dec	r5
     e4e:	01 50       	subi	r16, 0x01	; 1
     e50:	11 09       	sbc	r17, r1
     e52:	01 15       	cp	r16, r1
     e54:	11 05       	cpc	r17, r1
     e56:	79 f7       	brne	.-34     	; 0xe36 <vfprintf+0x478>
     e58:	f7 c0       	rjmp	.+494    	; 0x1048 <__DATA_REGION_LENGTH__+0x48>
     e5a:	84 36       	cpi	r24, 0x64	; 100
     e5c:	11 f0       	breq	.+4      	; 0xe62 <vfprintf+0x4a4>
     e5e:	89 36       	cpi	r24, 0x69	; 105
     e60:	61 f5       	brne	.+88     	; 0xeba <vfprintf+0x4fc>
     e62:	56 01       	movw	r10, r12
     e64:	97 fe       	sbrs	r9, 7
     e66:	09 c0       	rjmp	.+18     	; 0xe7a <vfprintf+0x4bc>
     e68:	24 e0       	ldi	r18, 0x04	; 4
     e6a:	a2 0e       	add	r10, r18
     e6c:	b1 1c       	adc	r11, r1
     e6e:	f6 01       	movw	r30, r12
     e70:	60 81       	ld	r22, Z
     e72:	71 81       	ldd	r23, Z+1	; 0x01
     e74:	82 81       	ldd	r24, Z+2	; 0x02
     e76:	93 81       	ldd	r25, Z+3	; 0x03
     e78:	0a c0       	rjmp	.+20     	; 0xe8e <vfprintf+0x4d0>
     e7a:	f2 e0       	ldi	r31, 0x02	; 2
     e7c:	af 0e       	add	r10, r31
     e7e:	b1 1c       	adc	r11, r1
     e80:	f6 01       	movw	r30, r12
     e82:	60 81       	ld	r22, Z
     e84:	71 81       	ldd	r23, Z+1	; 0x01
     e86:	07 2e       	mov	r0, r23
     e88:	00 0c       	add	r0, r0
     e8a:	88 0b       	sbc	r24, r24
     e8c:	99 0b       	sbc	r25, r25
     e8e:	f9 2d       	mov	r31, r9
     e90:	ff 76       	andi	r31, 0x6F	; 111
     e92:	9f 2e       	mov	r9, r31
     e94:	97 ff       	sbrs	r25, 7
     e96:	09 c0       	rjmp	.+18     	; 0xeaa <vfprintf+0x4ec>
     e98:	90 95       	com	r25
     e9a:	80 95       	com	r24
     e9c:	70 95       	com	r23
     e9e:	61 95       	neg	r22
     ea0:	7f 4f       	sbci	r23, 0xFF	; 255
     ea2:	8f 4f       	sbci	r24, 0xFF	; 255
     ea4:	9f 4f       	sbci	r25, 0xFF	; 255
     ea6:	f0 68       	ori	r31, 0x80	; 128
     ea8:	9f 2e       	mov	r9, r31
     eaa:	2a e0       	ldi	r18, 0x0A	; 10
     eac:	30 e0       	ldi	r19, 0x00	; 0
     eae:	a3 01       	movw	r20, r6
     eb0:	0e 94 e5 09 	call	0x13ca	; 0x13ca <__ultoa_invert>
     eb4:	c8 2e       	mov	r12, r24
     eb6:	c6 18       	sub	r12, r6
     eb8:	3f c0       	rjmp	.+126    	; 0xf38 <vfprintf+0x57a>
     eba:	09 2d       	mov	r16, r9
     ebc:	85 37       	cpi	r24, 0x75	; 117
     ebe:	21 f4       	brne	.+8      	; 0xec8 <vfprintf+0x50a>
     ec0:	0f 7e       	andi	r16, 0xEF	; 239
     ec2:	2a e0       	ldi	r18, 0x0A	; 10
     ec4:	30 e0       	ldi	r19, 0x00	; 0
     ec6:	1d c0       	rjmp	.+58     	; 0xf02 <vfprintf+0x544>
     ec8:	09 7f       	andi	r16, 0xF9	; 249
     eca:	8f 36       	cpi	r24, 0x6F	; 111
     ecc:	91 f0       	breq	.+36     	; 0xef2 <vfprintf+0x534>
     ece:	18 f4       	brcc	.+6      	; 0xed6 <vfprintf+0x518>
     ed0:	88 35       	cpi	r24, 0x58	; 88
     ed2:	59 f0       	breq	.+22     	; 0xeea <vfprintf+0x52c>
     ed4:	c3 c0       	rjmp	.+390    	; 0x105c <__DATA_REGION_LENGTH__+0x5c>
     ed6:	80 37       	cpi	r24, 0x70	; 112
     ed8:	19 f0       	breq	.+6      	; 0xee0 <vfprintf+0x522>
     eda:	88 37       	cpi	r24, 0x78	; 120
     edc:	11 f0       	breq	.+4      	; 0xee2 <vfprintf+0x524>
     ede:	be c0       	rjmp	.+380    	; 0x105c <__DATA_REGION_LENGTH__+0x5c>
     ee0:	00 61       	ori	r16, 0x10	; 16
     ee2:	04 ff       	sbrs	r16, 4
     ee4:	09 c0       	rjmp	.+18     	; 0xef8 <vfprintf+0x53a>
     ee6:	04 60       	ori	r16, 0x04	; 4
     ee8:	07 c0       	rjmp	.+14     	; 0xef8 <vfprintf+0x53a>
     eea:	94 fe       	sbrs	r9, 4
     eec:	08 c0       	rjmp	.+16     	; 0xefe <vfprintf+0x540>
     eee:	06 60       	ori	r16, 0x06	; 6
     ef0:	06 c0       	rjmp	.+12     	; 0xefe <vfprintf+0x540>
     ef2:	28 e0       	ldi	r18, 0x08	; 8
     ef4:	30 e0       	ldi	r19, 0x00	; 0
     ef6:	05 c0       	rjmp	.+10     	; 0xf02 <vfprintf+0x544>
     ef8:	20 e1       	ldi	r18, 0x10	; 16
     efa:	30 e0       	ldi	r19, 0x00	; 0
     efc:	02 c0       	rjmp	.+4      	; 0xf02 <vfprintf+0x544>
     efe:	20 e1       	ldi	r18, 0x10	; 16
     f00:	32 e0       	ldi	r19, 0x02	; 2
     f02:	56 01       	movw	r10, r12
     f04:	07 ff       	sbrs	r16, 7
     f06:	09 c0       	rjmp	.+18     	; 0xf1a <vfprintf+0x55c>
     f08:	84 e0       	ldi	r24, 0x04	; 4
     f0a:	a8 0e       	add	r10, r24
     f0c:	b1 1c       	adc	r11, r1
     f0e:	f6 01       	movw	r30, r12
     f10:	60 81       	ld	r22, Z
     f12:	71 81       	ldd	r23, Z+1	; 0x01
     f14:	82 81       	ldd	r24, Z+2	; 0x02
     f16:	93 81       	ldd	r25, Z+3	; 0x03
     f18:	08 c0       	rjmp	.+16     	; 0xf2a <vfprintf+0x56c>
     f1a:	f2 e0       	ldi	r31, 0x02	; 2
     f1c:	af 0e       	add	r10, r31
     f1e:	b1 1c       	adc	r11, r1
     f20:	f6 01       	movw	r30, r12
     f22:	60 81       	ld	r22, Z
     f24:	71 81       	ldd	r23, Z+1	; 0x01
     f26:	80 e0       	ldi	r24, 0x00	; 0
     f28:	90 e0       	ldi	r25, 0x00	; 0
     f2a:	a3 01       	movw	r20, r6
     f2c:	0e 94 e5 09 	call	0x13ca	; 0x13ca <__ultoa_invert>
     f30:	c8 2e       	mov	r12, r24
     f32:	c6 18       	sub	r12, r6
     f34:	0f 77       	andi	r16, 0x7F	; 127
     f36:	90 2e       	mov	r9, r16
     f38:	96 fe       	sbrs	r9, 6
     f3a:	0b c0       	rjmp	.+22     	; 0xf52 <vfprintf+0x594>
     f3c:	09 2d       	mov	r16, r9
     f3e:	0e 7f       	andi	r16, 0xFE	; 254
     f40:	c1 16       	cp	r12, r17
     f42:	50 f4       	brcc	.+20     	; 0xf58 <vfprintf+0x59a>
     f44:	94 fe       	sbrs	r9, 4
     f46:	0a c0       	rjmp	.+20     	; 0xf5c <vfprintf+0x59e>
     f48:	92 fc       	sbrc	r9, 2
     f4a:	08 c0       	rjmp	.+16     	; 0xf5c <vfprintf+0x59e>
     f4c:	09 2d       	mov	r16, r9
     f4e:	0e 7e       	andi	r16, 0xEE	; 238
     f50:	05 c0       	rjmp	.+10     	; 0xf5c <vfprintf+0x59e>
     f52:	dc 2c       	mov	r13, r12
     f54:	09 2d       	mov	r16, r9
     f56:	03 c0       	rjmp	.+6      	; 0xf5e <vfprintf+0x5a0>
     f58:	dc 2c       	mov	r13, r12
     f5a:	01 c0       	rjmp	.+2      	; 0xf5e <vfprintf+0x5a0>
     f5c:	d1 2e       	mov	r13, r17
     f5e:	04 ff       	sbrs	r16, 4
     f60:	0d c0       	rjmp	.+26     	; 0xf7c <vfprintf+0x5be>
     f62:	fe 01       	movw	r30, r28
     f64:	ec 0d       	add	r30, r12
     f66:	f1 1d       	adc	r31, r1
     f68:	80 81       	ld	r24, Z
     f6a:	80 33       	cpi	r24, 0x30	; 48
     f6c:	11 f4       	brne	.+4      	; 0xf72 <vfprintf+0x5b4>
     f6e:	09 7e       	andi	r16, 0xE9	; 233
     f70:	09 c0       	rjmp	.+18     	; 0xf84 <vfprintf+0x5c6>
     f72:	02 ff       	sbrs	r16, 2
     f74:	06 c0       	rjmp	.+12     	; 0xf82 <vfprintf+0x5c4>
     f76:	d3 94       	inc	r13
     f78:	d3 94       	inc	r13
     f7a:	04 c0       	rjmp	.+8      	; 0xf84 <vfprintf+0x5c6>
     f7c:	80 2f       	mov	r24, r16
     f7e:	86 78       	andi	r24, 0x86	; 134
     f80:	09 f0       	breq	.+2      	; 0xf84 <vfprintf+0x5c6>
     f82:	d3 94       	inc	r13
     f84:	03 fd       	sbrc	r16, 3
     f86:	11 c0       	rjmp	.+34     	; 0xfaa <vfprintf+0x5ec>
     f88:	00 ff       	sbrs	r16, 0
     f8a:	06 c0       	rjmp	.+12     	; 0xf98 <vfprintf+0x5da>
     f8c:	1c 2d       	mov	r17, r12
     f8e:	d5 14       	cp	r13, r5
     f90:	80 f4       	brcc	.+32     	; 0xfb2 <vfprintf+0x5f4>
     f92:	15 0d       	add	r17, r5
     f94:	1d 19       	sub	r17, r13
     f96:	0d c0       	rjmp	.+26     	; 0xfb2 <vfprintf+0x5f4>
     f98:	d5 14       	cp	r13, r5
     f9a:	58 f4       	brcc	.+22     	; 0xfb2 <vfprintf+0x5f4>
     f9c:	b7 01       	movw	r22, r14
     f9e:	80 e2       	ldi	r24, 0x20	; 32
     fa0:	90 e0       	ldi	r25, 0x00	; 0
     fa2:	0e 94 a9 09 	call	0x1352	; 0x1352 <fputc>
     fa6:	d3 94       	inc	r13
     fa8:	f7 cf       	rjmp	.-18     	; 0xf98 <vfprintf+0x5da>
     faa:	d5 14       	cp	r13, r5
     fac:	10 f4       	brcc	.+4      	; 0xfb2 <vfprintf+0x5f4>
     fae:	5d 18       	sub	r5, r13
     fb0:	01 c0       	rjmp	.+2      	; 0xfb4 <vfprintf+0x5f6>
     fb2:	51 2c       	mov	r5, r1
     fb4:	04 ff       	sbrs	r16, 4
     fb6:	10 c0       	rjmp	.+32     	; 0xfd8 <vfprintf+0x61a>
     fb8:	b7 01       	movw	r22, r14
     fba:	80 e3       	ldi	r24, 0x30	; 48
     fbc:	90 e0       	ldi	r25, 0x00	; 0
     fbe:	0e 94 a9 09 	call	0x1352	; 0x1352 <fputc>
     fc2:	02 ff       	sbrs	r16, 2
     fc4:	17 c0       	rjmp	.+46     	; 0xff4 <vfprintf+0x636>
     fc6:	01 fd       	sbrc	r16, 1
     fc8:	03 c0       	rjmp	.+6      	; 0xfd0 <vfprintf+0x612>
     fca:	88 e7       	ldi	r24, 0x78	; 120
     fcc:	90 e0       	ldi	r25, 0x00	; 0
     fce:	02 c0       	rjmp	.+4      	; 0xfd4 <vfprintf+0x616>
     fd0:	88 e5       	ldi	r24, 0x58	; 88
     fd2:	90 e0       	ldi	r25, 0x00	; 0
     fd4:	b7 01       	movw	r22, r14
     fd6:	0c c0       	rjmp	.+24     	; 0xff0 <vfprintf+0x632>
     fd8:	80 2f       	mov	r24, r16
     fda:	86 78       	andi	r24, 0x86	; 134
     fdc:	59 f0       	breq	.+22     	; 0xff4 <vfprintf+0x636>
     fde:	01 ff       	sbrs	r16, 1
     fe0:	02 c0       	rjmp	.+4      	; 0xfe6 <vfprintf+0x628>
     fe2:	8b e2       	ldi	r24, 0x2B	; 43
     fe4:	01 c0       	rjmp	.+2      	; 0xfe8 <vfprintf+0x62a>
     fe6:	80 e2       	ldi	r24, 0x20	; 32
     fe8:	07 fd       	sbrc	r16, 7
     fea:	8d e2       	ldi	r24, 0x2D	; 45
     fec:	b7 01       	movw	r22, r14
     fee:	90 e0       	ldi	r25, 0x00	; 0
     ff0:	0e 94 a9 09 	call	0x1352	; 0x1352 <fputc>
     ff4:	c1 16       	cp	r12, r17
     ff6:	38 f4       	brcc	.+14     	; 0x1006 <__DATA_REGION_LENGTH__+0x6>
     ff8:	b7 01       	movw	r22, r14
     ffa:	80 e3       	ldi	r24, 0x30	; 48
     ffc:	90 e0       	ldi	r25, 0x00	; 0
     ffe:	0e 94 a9 09 	call	0x1352	; 0x1352 <fputc>
    1002:	11 50       	subi	r17, 0x01	; 1
    1004:	f7 cf       	rjmp	.-18     	; 0xff4 <vfprintf+0x636>
    1006:	ca 94       	dec	r12
    1008:	f3 01       	movw	r30, r6
    100a:	ec 0d       	add	r30, r12
    100c:	f1 1d       	adc	r31, r1
    100e:	80 81       	ld	r24, Z
    1010:	b7 01       	movw	r22, r14
    1012:	90 e0       	ldi	r25, 0x00	; 0
    1014:	0e 94 a9 09 	call	0x1352	; 0x1352 <fputc>
    1018:	c1 10       	cpse	r12, r1
    101a:	f5 cf       	rjmp	.-22     	; 0x1006 <__DATA_REGION_LENGTH__+0x6>
    101c:	15 c0       	rjmp	.+42     	; 0x1048 <__DATA_REGION_LENGTH__+0x48>
    101e:	f4 e0       	ldi	r31, 0x04	; 4
    1020:	f5 15       	cp	r31, r5
    1022:	60 f5       	brcc	.+88     	; 0x107c <__DATA_REGION_LENGTH__+0x7c>
    1024:	84 e0       	ldi	r24, 0x04	; 4
    1026:	58 1a       	sub	r5, r24
    1028:	93 fe       	sbrs	r9, 3
    102a:	1f c0       	rjmp	.+62     	; 0x106a <__DATA_REGION_LENGTH__+0x6a>
    102c:	01 11       	cpse	r16, r1
    102e:	27 c0       	rjmp	.+78     	; 0x107e <__DATA_REGION_LENGTH__+0x7e>
    1030:	2c 85       	ldd	r18, Y+12	; 0x0c
    1032:	23 ff       	sbrs	r18, 3
    1034:	2a c0       	rjmp	.+84     	; 0x108a <__DATA_REGION_LENGTH__+0x8a>
    1036:	0c e8       	ldi	r16, 0x8C	; 140
    1038:	10 e0       	ldi	r17, 0x00	; 0
    103a:	39 2d       	mov	r19, r9
    103c:	30 71       	andi	r19, 0x10	; 16
    103e:	93 2e       	mov	r9, r19
    1040:	f8 01       	movw	r30, r16
    1042:	84 91       	lpm	r24, Z
    1044:	81 11       	cpse	r24, r1
    1046:	24 c0       	rjmp	.+72     	; 0x1090 <__DATA_REGION_LENGTH__+0x90>
    1048:	55 20       	and	r5, r5
    104a:	09 f4       	brne	.+2      	; 0x104e <__DATA_REGION_LENGTH__+0x4e>
    104c:	e4 cc       	rjmp	.-1592   	; 0xa16 <vfprintf+0x58>
    104e:	b7 01       	movw	r22, r14
    1050:	80 e2       	ldi	r24, 0x20	; 32
    1052:	90 e0       	ldi	r25, 0x00	; 0
    1054:	0e 94 a9 09 	call	0x1352	; 0x1352 <fputc>
    1058:	5a 94       	dec	r5
    105a:	f6 cf       	rjmp	.-20     	; 0x1048 <__DATA_REGION_LENGTH__+0x48>
    105c:	f7 01       	movw	r30, r14
    105e:	86 81       	ldd	r24, Z+6	; 0x06
    1060:	97 81       	ldd	r25, Z+7	; 0x07
    1062:	26 c0       	rjmp	.+76     	; 0x10b0 <__DATA_REGION_LENGTH__+0xb0>
    1064:	8f ef       	ldi	r24, 0xFF	; 255
    1066:	9f ef       	ldi	r25, 0xFF	; 255
    1068:	23 c0       	rjmp	.+70     	; 0x10b0 <__DATA_REGION_LENGTH__+0xb0>
    106a:	b7 01       	movw	r22, r14
    106c:	80 e2       	ldi	r24, 0x20	; 32
    106e:	90 e0       	ldi	r25, 0x00	; 0
    1070:	0e 94 a9 09 	call	0x1352	; 0x1352 <fputc>
    1074:	5a 94       	dec	r5
    1076:	51 10       	cpse	r5, r1
    1078:	f8 cf       	rjmp	.-16     	; 0x106a <__DATA_REGION_LENGTH__+0x6a>
    107a:	d8 cf       	rjmp	.-80     	; 0x102c <__DATA_REGION_LENGTH__+0x2c>
    107c:	51 2c       	mov	r5, r1
    107e:	b7 01       	movw	r22, r14
    1080:	80 2f       	mov	r24, r16
    1082:	90 e0       	ldi	r25, 0x00	; 0
    1084:	0e 94 a9 09 	call	0x1352	; 0x1352 <fputc>
    1088:	d3 cf       	rjmp	.-90     	; 0x1030 <__DATA_REGION_LENGTH__+0x30>
    108a:	00 e9       	ldi	r16, 0x90	; 144
    108c:	10 e0       	ldi	r17, 0x00	; 0
    108e:	d5 cf       	rjmp	.-86     	; 0x103a <__DATA_REGION_LENGTH__+0x3a>
    1090:	91 10       	cpse	r9, r1
    1092:	80 52       	subi	r24, 0x20	; 32
    1094:	b7 01       	movw	r22, r14
    1096:	90 e0       	ldi	r25, 0x00	; 0
    1098:	0e 94 a9 09 	call	0x1352	; 0x1352 <fputc>
    109c:	0f 5f       	subi	r16, 0xFF	; 255
    109e:	1f 4f       	sbci	r17, 0xFF	; 255
    10a0:	cf cf       	rjmp	.-98     	; 0x1040 <__DATA_REGION_LENGTH__+0x40>
    10a2:	23 e0       	ldi	r18, 0x03	; 3
    10a4:	25 15       	cp	r18, r5
    10a6:	10 f4       	brcc	.+4      	; 0x10ac <__DATA_REGION_LENGTH__+0xac>
    10a8:	83 e0       	ldi	r24, 0x03	; 3
    10aa:	bd cf       	rjmp	.-134    	; 0x1026 <__DATA_REGION_LENGTH__+0x26>
    10ac:	51 2c       	mov	r5, r1
    10ae:	c0 cf       	rjmp	.-128    	; 0x1030 <__DATA_REGION_LENGTH__+0x30>
    10b0:	60 96       	adiw	r28, 0x10	; 16
    10b2:	e2 e1       	ldi	r30, 0x12	; 18
    10b4:	0c 94 8c 08 	jmp	0x1118	; 0x1118 <__epilogue_restores__>

000010b8 <__divmodhi4>:
    10b8:	97 fb       	bst	r25, 7
    10ba:	07 2e       	mov	r0, r23
    10bc:	16 f4       	brtc	.+4      	; 0x10c2 <__divmodhi4+0xa>
    10be:	00 94       	com	r0
    10c0:	07 d0       	rcall	.+14     	; 0x10d0 <__divmodhi4_neg1>
    10c2:	77 fd       	sbrc	r23, 7
    10c4:	09 d0       	rcall	.+18     	; 0x10d8 <__divmodhi4_neg2>
    10c6:	0e 94 a7 08 	call	0x114e	; 0x114e <__udivmodhi4>
    10ca:	07 fc       	sbrc	r0, 7
    10cc:	05 d0       	rcall	.+10     	; 0x10d8 <__divmodhi4_neg2>
    10ce:	3e f4       	brtc	.+14     	; 0x10de <__divmodhi4_exit>

000010d0 <__divmodhi4_neg1>:
    10d0:	90 95       	com	r25
    10d2:	81 95       	neg	r24
    10d4:	9f 4f       	sbci	r25, 0xFF	; 255
    10d6:	08 95       	ret

000010d8 <__divmodhi4_neg2>:
    10d8:	70 95       	com	r23
    10da:	61 95       	neg	r22
    10dc:	7f 4f       	sbci	r23, 0xFF	; 255

000010de <__divmodhi4_exit>:
    10de:	08 95       	ret

000010e0 <__prologue_saves__>:
    10e0:	2f 92       	push	r2
    10e2:	3f 92       	push	r3
    10e4:	4f 92       	push	r4
    10e6:	5f 92       	push	r5
    10e8:	6f 92       	push	r6
    10ea:	7f 92       	push	r7
    10ec:	8f 92       	push	r8
    10ee:	9f 92       	push	r9
    10f0:	af 92       	push	r10
    10f2:	bf 92       	push	r11
    10f4:	cf 92       	push	r12
    10f6:	df 92       	push	r13
    10f8:	ef 92       	push	r14
    10fa:	ff 92       	push	r15
    10fc:	0f 93       	push	r16
    10fe:	1f 93       	push	r17
    1100:	cf 93       	push	r28
    1102:	df 93       	push	r29
    1104:	cd b7       	in	r28, 0x3d	; 61
    1106:	de b7       	in	r29, 0x3e	; 62
    1108:	ca 1b       	sub	r28, r26
    110a:	db 0b       	sbc	r29, r27
    110c:	0f b6       	in	r0, 0x3f	; 63
    110e:	f8 94       	cli
    1110:	de bf       	out	0x3e, r29	; 62
    1112:	0f be       	out	0x3f, r0	; 63
    1114:	cd bf       	out	0x3d, r28	; 61
    1116:	09 94       	ijmp

00001118 <__epilogue_restores__>:
    1118:	2a 88       	ldd	r2, Y+18	; 0x12
    111a:	39 88       	ldd	r3, Y+17	; 0x11
    111c:	48 88       	ldd	r4, Y+16	; 0x10
    111e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1120:	6e 84       	ldd	r6, Y+14	; 0x0e
    1122:	7d 84       	ldd	r7, Y+13	; 0x0d
    1124:	8c 84       	ldd	r8, Y+12	; 0x0c
    1126:	9b 84       	ldd	r9, Y+11	; 0x0b
    1128:	aa 84       	ldd	r10, Y+10	; 0x0a
    112a:	b9 84       	ldd	r11, Y+9	; 0x09
    112c:	c8 84       	ldd	r12, Y+8	; 0x08
    112e:	df 80       	ldd	r13, Y+7	; 0x07
    1130:	ee 80       	ldd	r14, Y+6	; 0x06
    1132:	fd 80       	ldd	r15, Y+5	; 0x05
    1134:	0c 81       	ldd	r16, Y+4	; 0x04
    1136:	1b 81       	ldd	r17, Y+3	; 0x03
    1138:	aa 81       	ldd	r26, Y+2	; 0x02
    113a:	b9 81       	ldd	r27, Y+1	; 0x01
    113c:	ce 0f       	add	r28, r30
    113e:	d1 1d       	adc	r29, r1
    1140:	0f b6       	in	r0, 0x3f	; 63
    1142:	f8 94       	cli
    1144:	de bf       	out	0x3e, r29	; 62
    1146:	0f be       	out	0x3f, r0	; 63
    1148:	cd bf       	out	0x3d, r28	; 61
    114a:	ed 01       	movw	r28, r26
    114c:	08 95       	ret

0000114e <__udivmodhi4>:
    114e:	aa 1b       	sub	r26, r26
    1150:	bb 1b       	sub	r27, r27
    1152:	51 e1       	ldi	r21, 0x11	; 17
    1154:	07 c0       	rjmp	.+14     	; 0x1164 <__udivmodhi4_ep>

00001156 <__udivmodhi4_loop>:
    1156:	aa 1f       	adc	r26, r26
    1158:	bb 1f       	adc	r27, r27
    115a:	a6 17       	cp	r26, r22
    115c:	b7 07       	cpc	r27, r23
    115e:	10 f0       	brcs	.+4      	; 0x1164 <__udivmodhi4_ep>
    1160:	a6 1b       	sub	r26, r22
    1162:	b7 0b       	sbc	r27, r23

00001164 <__udivmodhi4_ep>:
    1164:	88 1f       	adc	r24, r24
    1166:	99 1f       	adc	r25, r25
    1168:	5a 95       	dec	r21
    116a:	a9 f7       	brne	.-22     	; 0x1156 <__udivmodhi4_loop>
    116c:	80 95       	com	r24
    116e:	90 95       	com	r25
    1170:	bc 01       	movw	r22, r24
    1172:	cd 01       	movw	r24, r26
    1174:	08 95       	ret

00001176 <__ftoa_engine>:
    1176:	28 30       	cpi	r18, 0x08	; 8
    1178:	08 f0       	brcs	.+2      	; 0x117c <__ftoa_engine+0x6>
    117a:	27 e0       	ldi	r18, 0x07	; 7
    117c:	33 27       	eor	r19, r19
    117e:	da 01       	movw	r26, r20
    1180:	99 0f       	add	r25, r25
    1182:	31 1d       	adc	r19, r1
    1184:	87 fd       	sbrc	r24, 7
    1186:	91 60       	ori	r25, 0x01	; 1
    1188:	00 96       	adiw	r24, 0x00	; 0
    118a:	61 05       	cpc	r22, r1
    118c:	71 05       	cpc	r23, r1
    118e:	39 f4       	brne	.+14     	; 0x119e <__ftoa_engine+0x28>
    1190:	32 60       	ori	r19, 0x02	; 2
    1192:	2e 5f       	subi	r18, 0xFE	; 254
    1194:	3d 93       	st	X+, r19
    1196:	30 e3       	ldi	r19, 0x30	; 48
    1198:	2a 95       	dec	r18
    119a:	e1 f7       	brne	.-8      	; 0x1194 <__ftoa_engine+0x1e>
    119c:	08 95       	ret
    119e:	9f 3f       	cpi	r25, 0xFF	; 255
    11a0:	30 f0       	brcs	.+12     	; 0x11ae <__ftoa_engine+0x38>
    11a2:	80 38       	cpi	r24, 0x80	; 128
    11a4:	71 05       	cpc	r23, r1
    11a6:	61 05       	cpc	r22, r1
    11a8:	09 f0       	breq	.+2      	; 0x11ac <__ftoa_engine+0x36>
    11aa:	3c 5f       	subi	r19, 0xFC	; 252
    11ac:	3c 5f       	subi	r19, 0xFC	; 252
    11ae:	3d 93       	st	X+, r19
    11b0:	91 30       	cpi	r25, 0x01	; 1
    11b2:	08 f0       	brcs	.+2      	; 0x11b6 <__ftoa_engine+0x40>
    11b4:	80 68       	ori	r24, 0x80	; 128
    11b6:	91 1d       	adc	r25, r1
    11b8:	df 93       	push	r29
    11ba:	cf 93       	push	r28
    11bc:	1f 93       	push	r17
    11be:	0f 93       	push	r16
    11c0:	ff 92       	push	r15
    11c2:	ef 92       	push	r14
    11c4:	19 2f       	mov	r17, r25
    11c6:	98 7f       	andi	r25, 0xF8	; 248
    11c8:	96 95       	lsr	r25
    11ca:	e9 2f       	mov	r30, r25
    11cc:	96 95       	lsr	r25
    11ce:	96 95       	lsr	r25
    11d0:	e9 0f       	add	r30, r25
    11d2:	ff 27       	eor	r31, r31
    11d4:	e2 51       	subi	r30, 0x12	; 18
    11d6:	ff 4f       	sbci	r31, 0xFF	; 255
    11d8:	99 27       	eor	r25, r25
    11da:	33 27       	eor	r19, r19
    11dc:	ee 24       	eor	r14, r14
    11de:	ff 24       	eor	r15, r15
    11e0:	a7 01       	movw	r20, r14
    11e2:	e7 01       	movw	r28, r14
    11e4:	05 90       	lpm	r0, Z+
    11e6:	08 94       	sec
    11e8:	07 94       	ror	r0
    11ea:	28 f4       	brcc	.+10     	; 0x11f6 <__ftoa_engine+0x80>
    11ec:	36 0f       	add	r19, r22
    11ee:	e7 1e       	adc	r14, r23
    11f0:	f8 1e       	adc	r15, r24
    11f2:	49 1f       	adc	r20, r25
    11f4:	51 1d       	adc	r21, r1
    11f6:	66 0f       	add	r22, r22
    11f8:	77 1f       	adc	r23, r23
    11fa:	88 1f       	adc	r24, r24
    11fc:	99 1f       	adc	r25, r25
    11fe:	06 94       	lsr	r0
    1200:	a1 f7       	brne	.-24     	; 0x11ea <__ftoa_engine+0x74>
    1202:	05 90       	lpm	r0, Z+
    1204:	07 94       	ror	r0
    1206:	28 f4       	brcc	.+10     	; 0x1212 <__ftoa_engine+0x9c>
    1208:	e7 0e       	add	r14, r23
    120a:	f8 1e       	adc	r15, r24
    120c:	49 1f       	adc	r20, r25
    120e:	56 1f       	adc	r21, r22
    1210:	c1 1d       	adc	r28, r1
    1212:	77 0f       	add	r23, r23
    1214:	88 1f       	adc	r24, r24
    1216:	99 1f       	adc	r25, r25
    1218:	66 1f       	adc	r22, r22
    121a:	06 94       	lsr	r0
    121c:	a1 f7       	brne	.-24     	; 0x1206 <__ftoa_engine+0x90>
    121e:	05 90       	lpm	r0, Z+
    1220:	07 94       	ror	r0
    1222:	28 f4       	brcc	.+10     	; 0x122e <__ftoa_engine+0xb8>
    1224:	f8 0e       	add	r15, r24
    1226:	49 1f       	adc	r20, r25
    1228:	56 1f       	adc	r21, r22
    122a:	c7 1f       	adc	r28, r23
    122c:	d1 1d       	adc	r29, r1
    122e:	88 0f       	add	r24, r24
    1230:	99 1f       	adc	r25, r25
    1232:	66 1f       	adc	r22, r22
    1234:	77 1f       	adc	r23, r23
    1236:	06 94       	lsr	r0
    1238:	a1 f7       	brne	.-24     	; 0x1222 <__ftoa_engine+0xac>
    123a:	05 90       	lpm	r0, Z+
    123c:	07 94       	ror	r0
    123e:	20 f4       	brcc	.+8      	; 0x1248 <__ftoa_engine+0xd2>
    1240:	49 0f       	add	r20, r25
    1242:	56 1f       	adc	r21, r22
    1244:	c7 1f       	adc	r28, r23
    1246:	d8 1f       	adc	r29, r24
    1248:	99 0f       	add	r25, r25
    124a:	66 1f       	adc	r22, r22
    124c:	77 1f       	adc	r23, r23
    124e:	88 1f       	adc	r24, r24
    1250:	06 94       	lsr	r0
    1252:	a9 f7       	brne	.-22     	; 0x123e <__ftoa_engine+0xc8>
    1254:	84 91       	lpm	r24, Z
    1256:	10 95       	com	r17
    1258:	17 70       	andi	r17, 0x07	; 7
    125a:	41 f0       	breq	.+16     	; 0x126c <__ftoa_engine+0xf6>
    125c:	d6 95       	lsr	r29
    125e:	c7 95       	ror	r28
    1260:	57 95       	ror	r21
    1262:	47 95       	ror	r20
    1264:	f7 94       	ror	r15
    1266:	e7 94       	ror	r14
    1268:	1a 95       	dec	r17
    126a:	c1 f7       	brne	.-16     	; 0x125c <__ftoa_engine+0xe6>
    126c:	e4 e9       	ldi	r30, 0x94	; 148
    126e:	f0 e0       	ldi	r31, 0x00	; 0
    1270:	68 94       	set
    1272:	15 90       	lpm	r1, Z+
    1274:	15 91       	lpm	r17, Z+
    1276:	35 91       	lpm	r19, Z+
    1278:	65 91       	lpm	r22, Z+
    127a:	95 91       	lpm	r25, Z+
    127c:	05 90       	lpm	r0, Z+
    127e:	7f e2       	ldi	r23, 0x2F	; 47
    1280:	73 95       	inc	r23
    1282:	e1 18       	sub	r14, r1
    1284:	f1 0a       	sbc	r15, r17
    1286:	43 0b       	sbc	r20, r19
    1288:	56 0b       	sbc	r21, r22
    128a:	c9 0b       	sbc	r28, r25
    128c:	d0 09       	sbc	r29, r0
    128e:	c0 f7       	brcc	.-16     	; 0x1280 <__ftoa_engine+0x10a>
    1290:	e1 0c       	add	r14, r1
    1292:	f1 1e       	adc	r15, r17
    1294:	43 1f       	adc	r20, r19
    1296:	56 1f       	adc	r21, r22
    1298:	c9 1f       	adc	r28, r25
    129a:	d0 1d       	adc	r29, r0
    129c:	7e f4       	brtc	.+30     	; 0x12bc <__ftoa_engine+0x146>
    129e:	70 33       	cpi	r23, 0x30	; 48
    12a0:	11 f4       	brne	.+4      	; 0x12a6 <__ftoa_engine+0x130>
    12a2:	8a 95       	dec	r24
    12a4:	e6 cf       	rjmp	.-52     	; 0x1272 <__ftoa_engine+0xfc>
    12a6:	e8 94       	clt
    12a8:	01 50       	subi	r16, 0x01	; 1
    12aa:	30 f0       	brcs	.+12     	; 0x12b8 <__ftoa_engine+0x142>
    12ac:	08 0f       	add	r16, r24
    12ae:	0a f4       	brpl	.+2      	; 0x12b2 <__ftoa_engine+0x13c>
    12b0:	00 27       	eor	r16, r16
    12b2:	02 17       	cp	r16, r18
    12b4:	08 f4       	brcc	.+2      	; 0x12b8 <__ftoa_engine+0x142>
    12b6:	20 2f       	mov	r18, r16
    12b8:	23 95       	inc	r18
    12ba:	02 2f       	mov	r16, r18
    12bc:	7a 33       	cpi	r23, 0x3A	; 58
    12be:	28 f0       	brcs	.+10     	; 0x12ca <__ftoa_engine+0x154>
    12c0:	79 e3       	ldi	r23, 0x39	; 57
    12c2:	7d 93       	st	X+, r23
    12c4:	2a 95       	dec	r18
    12c6:	e9 f7       	brne	.-6      	; 0x12c2 <__ftoa_engine+0x14c>
    12c8:	10 c0       	rjmp	.+32     	; 0x12ea <__ftoa_engine+0x174>
    12ca:	7d 93       	st	X+, r23
    12cc:	2a 95       	dec	r18
    12ce:	89 f6       	brne	.-94     	; 0x1272 <__ftoa_engine+0xfc>
    12d0:	06 94       	lsr	r0
    12d2:	97 95       	ror	r25
    12d4:	67 95       	ror	r22
    12d6:	37 95       	ror	r19
    12d8:	17 95       	ror	r17
    12da:	17 94       	ror	r1
    12dc:	e1 18       	sub	r14, r1
    12de:	f1 0a       	sbc	r15, r17
    12e0:	43 0b       	sbc	r20, r19
    12e2:	56 0b       	sbc	r21, r22
    12e4:	c9 0b       	sbc	r28, r25
    12e6:	d0 09       	sbc	r29, r0
    12e8:	98 f0       	brcs	.+38     	; 0x1310 <__ftoa_engine+0x19a>
    12ea:	23 95       	inc	r18
    12ec:	7e 91       	ld	r23, -X
    12ee:	73 95       	inc	r23
    12f0:	7a 33       	cpi	r23, 0x3A	; 58
    12f2:	08 f0       	brcs	.+2      	; 0x12f6 <__ftoa_engine+0x180>
    12f4:	70 e3       	ldi	r23, 0x30	; 48
    12f6:	7c 93       	st	X, r23
    12f8:	20 13       	cpse	r18, r16
    12fa:	b8 f7       	brcc	.-18     	; 0x12ea <__ftoa_engine+0x174>
    12fc:	7e 91       	ld	r23, -X
    12fe:	70 61       	ori	r23, 0x10	; 16
    1300:	7d 93       	st	X+, r23
    1302:	30 f0       	brcs	.+12     	; 0x1310 <__ftoa_engine+0x19a>
    1304:	83 95       	inc	r24
    1306:	71 e3       	ldi	r23, 0x31	; 49
    1308:	7d 93       	st	X+, r23
    130a:	70 e3       	ldi	r23, 0x30	; 48
    130c:	2a 95       	dec	r18
    130e:	e1 f7       	brne	.-8      	; 0x1308 <__ftoa_engine+0x192>
    1310:	11 24       	eor	r1, r1
    1312:	ef 90       	pop	r14
    1314:	ff 90       	pop	r15
    1316:	0f 91       	pop	r16
    1318:	1f 91       	pop	r17
    131a:	cf 91       	pop	r28
    131c:	df 91       	pop	r29
    131e:	99 27       	eor	r25, r25
    1320:	87 fd       	sbrc	r24, 7
    1322:	90 95       	com	r25
    1324:	08 95       	ret

00001326 <strnlen_P>:
    1326:	fc 01       	movw	r30, r24
    1328:	05 90       	lpm	r0, Z+
    132a:	61 50       	subi	r22, 0x01	; 1
    132c:	70 40       	sbci	r23, 0x00	; 0
    132e:	01 10       	cpse	r0, r1
    1330:	d8 f7       	brcc	.-10     	; 0x1328 <strnlen_P+0x2>
    1332:	80 95       	com	r24
    1334:	90 95       	com	r25
    1336:	8e 0f       	add	r24, r30
    1338:	9f 1f       	adc	r25, r31
    133a:	08 95       	ret

0000133c <strnlen>:
    133c:	fc 01       	movw	r30, r24
    133e:	61 50       	subi	r22, 0x01	; 1
    1340:	70 40       	sbci	r23, 0x00	; 0
    1342:	01 90       	ld	r0, Z+
    1344:	01 10       	cpse	r0, r1
    1346:	d8 f7       	brcc	.-10     	; 0x133e <strnlen+0x2>
    1348:	80 95       	com	r24
    134a:	90 95       	com	r25
    134c:	8e 0f       	add	r24, r30
    134e:	9f 1f       	adc	r25, r31
    1350:	08 95       	ret

00001352 <fputc>:
    1352:	0f 93       	push	r16
    1354:	1f 93       	push	r17
    1356:	cf 93       	push	r28
    1358:	df 93       	push	r29
    135a:	fb 01       	movw	r30, r22
    135c:	23 81       	ldd	r18, Z+3	; 0x03
    135e:	21 fd       	sbrc	r18, 1
    1360:	03 c0       	rjmp	.+6      	; 0x1368 <fputc+0x16>
    1362:	8f ef       	ldi	r24, 0xFF	; 255
    1364:	9f ef       	ldi	r25, 0xFF	; 255
    1366:	2c c0       	rjmp	.+88     	; 0x13c0 <fputc+0x6e>
    1368:	22 ff       	sbrs	r18, 2
    136a:	16 c0       	rjmp	.+44     	; 0x1398 <fputc+0x46>
    136c:	46 81       	ldd	r20, Z+6	; 0x06
    136e:	57 81       	ldd	r21, Z+7	; 0x07
    1370:	24 81       	ldd	r18, Z+4	; 0x04
    1372:	35 81       	ldd	r19, Z+5	; 0x05
    1374:	42 17       	cp	r20, r18
    1376:	53 07       	cpc	r21, r19
    1378:	44 f4       	brge	.+16     	; 0x138a <fputc+0x38>
    137a:	a0 81       	ld	r26, Z
    137c:	b1 81       	ldd	r27, Z+1	; 0x01
    137e:	9d 01       	movw	r18, r26
    1380:	2f 5f       	subi	r18, 0xFF	; 255
    1382:	3f 4f       	sbci	r19, 0xFF	; 255
    1384:	31 83       	std	Z+1, r19	; 0x01
    1386:	20 83       	st	Z, r18
    1388:	8c 93       	st	X, r24
    138a:	26 81       	ldd	r18, Z+6	; 0x06
    138c:	37 81       	ldd	r19, Z+7	; 0x07
    138e:	2f 5f       	subi	r18, 0xFF	; 255
    1390:	3f 4f       	sbci	r19, 0xFF	; 255
    1392:	37 83       	std	Z+7, r19	; 0x07
    1394:	26 83       	std	Z+6, r18	; 0x06
    1396:	14 c0       	rjmp	.+40     	; 0x13c0 <fputc+0x6e>
    1398:	8b 01       	movw	r16, r22
    139a:	ec 01       	movw	r28, r24
    139c:	fb 01       	movw	r30, r22
    139e:	00 84       	ldd	r0, Z+8	; 0x08
    13a0:	f1 85       	ldd	r31, Z+9	; 0x09
    13a2:	e0 2d       	mov	r30, r0
    13a4:	09 95       	icall
    13a6:	89 2b       	or	r24, r25
    13a8:	e1 f6       	brne	.-72     	; 0x1362 <fputc+0x10>
    13aa:	d8 01       	movw	r26, r16
    13ac:	16 96       	adiw	r26, 0x06	; 6
    13ae:	8d 91       	ld	r24, X+
    13b0:	9c 91       	ld	r25, X
    13b2:	17 97       	sbiw	r26, 0x07	; 7
    13b4:	01 96       	adiw	r24, 0x01	; 1
    13b6:	17 96       	adiw	r26, 0x07	; 7
    13b8:	9c 93       	st	X, r25
    13ba:	8e 93       	st	-X, r24
    13bc:	16 97       	sbiw	r26, 0x06	; 6
    13be:	ce 01       	movw	r24, r28
    13c0:	df 91       	pop	r29
    13c2:	cf 91       	pop	r28
    13c4:	1f 91       	pop	r17
    13c6:	0f 91       	pop	r16
    13c8:	08 95       	ret

000013ca <__ultoa_invert>:
    13ca:	fa 01       	movw	r30, r20
    13cc:	aa 27       	eor	r26, r26
    13ce:	28 30       	cpi	r18, 0x08	; 8
    13d0:	51 f1       	breq	.+84     	; 0x1426 <__ultoa_invert+0x5c>
    13d2:	20 31       	cpi	r18, 0x10	; 16
    13d4:	81 f1       	breq	.+96     	; 0x1436 <__ultoa_invert+0x6c>
    13d6:	e8 94       	clt
    13d8:	6f 93       	push	r22
    13da:	6e 7f       	andi	r22, 0xFE	; 254
    13dc:	6e 5f       	subi	r22, 0xFE	; 254
    13de:	7f 4f       	sbci	r23, 0xFF	; 255
    13e0:	8f 4f       	sbci	r24, 0xFF	; 255
    13e2:	9f 4f       	sbci	r25, 0xFF	; 255
    13e4:	af 4f       	sbci	r26, 0xFF	; 255
    13e6:	b1 e0       	ldi	r27, 0x01	; 1
    13e8:	3e d0       	rcall	.+124    	; 0x1466 <__ultoa_invert+0x9c>
    13ea:	b4 e0       	ldi	r27, 0x04	; 4
    13ec:	3c d0       	rcall	.+120    	; 0x1466 <__ultoa_invert+0x9c>
    13ee:	67 0f       	add	r22, r23
    13f0:	78 1f       	adc	r23, r24
    13f2:	89 1f       	adc	r24, r25
    13f4:	9a 1f       	adc	r25, r26
    13f6:	a1 1d       	adc	r26, r1
    13f8:	68 0f       	add	r22, r24
    13fa:	79 1f       	adc	r23, r25
    13fc:	8a 1f       	adc	r24, r26
    13fe:	91 1d       	adc	r25, r1
    1400:	a1 1d       	adc	r26, r1
    1402:	6a 0f       	add	r22, r26
    1404:	71 1d       	adc	r23, r1
    1406:	81 1d       	adc	r24, r1
    1408:	91 1d       	adc	r25, r1
    140a:	a1 1d       	adc	r26, r1
    140c:	20 d0       	rcall	.+64     	; 0x144e <__ultoa_invert+0x84>
    140e:	09 f4       	brne	.+2      	; 0x1412 <__ultoa_invert+0x48>
    1410:	68 94       	set
    1412:	3f 91       	pop	r19
    1414:	2a e0       	ldi	r18, 0x0A	; 10
    1416:	26 9f       	mul	r18, r22
    1418:	11 24       	eor	r1, r1
    141a:	30 19       	sub	r19, r0
    141c:	30 5d       	subi	r19, 0xD0	; 208
    141e:	31 93       	st	Z+, r19
    1420:	de f6       	brtc	.-74     	; 0x13d8 <__ultoa_invert+0xe>
    1422:	cf 01       	movw	r24, r30
    1424:	08 95       	ret
    1426:	46 2f       	mov	r20, r22
    1428:	47 70       	andi	r20, 0x07	; 7
    142a:	40 5d       	subi	r20, 0xD0	; 208
    142c:	41 93       	st	Z+, r20
    142e:	b3 e0       	ldi	r27, 0x03	; 3
    1430:	0f d0       	rcall	.+30     	; 0x1450 <__ultoa_invert+0x86>
    1432:	c9 f7       	brne	.-14     	; 0x1426 <__ultoa_invert+0x5c>
    1434:	f6 cf       	rjmp	.-20     	; 0x1422 <__ultoa_invert+0x58>
    1436:	46 2f       	mov	r20, r22
    1438:	4f 70       	andi	r20, 0x0F	; 15
    143a:	40 5d       	subi	r20, 0xD0	; 208
    143c:	4a 33       	cpi	r20, 0x3A	; 58
    143e:	18 f0       	brcs	.+6      	; 0x1446 <__ultoa_invert+0x7c>
    1440:	49 5d       	subi	r20, 0xD9	; 217
    1442:	31 fd       	sbrc	r19, 1
    1444:	40 52       	subi	r20, 0x20	; 32
    1446:	41 93       	st	Z+, r20
    1448:	02 d0       	rcall	.+4      	; 0x144e <__ultoa_invert+0x84>
    144a:	a9 f7       	brne	.-22     	; 0x1436 <__ultoa_invert+0x6c>
    144c:	ea cf       	rjmp	.-44     	; 0x1422 <__ultoa_invert+0x58>
    144e:	b4 e0       	ldi	r27, 0x04	; 4
    1450:	a6 95       	lsr	r26
    1452:	97 95       	ror	r25
    1454:	87 95       	ror	r24
    1456:	77 95       	ror	r23
    1458:	67 95       	ror	r22
    145a:	ba 95       	dec	r27
    145c:	c9 f7       	brne	.-14     	; 0x1450 <__ultoa_invert+0x86>
    145e:	00 97       	sbiw	r24, 0x00	; 0
    1460:	61 05       	cpc	r22, r1
    1462:	71 05       	cpc	r23, r1
    1464:	08 95       	ret
    1466:	9b 01       	movw	r18, r22
    1468:	ac 01       	movw	r20, r24
    146a:	0a 2e       	mov	r0, r26
    146c:	06 94       	lsr	r0
    146e:	57 95       	ror	r21
    1470:	47 95       	ror	r20
    1472:	37 95       	ror	r19
    1474:	27 95       	ror	r18
    1476:	ba 95       	dec	r27
    1478:	c9 f7       	brne	.-14     	; 0x146c <__ultoa_invert+0xa2>
    147a:	62 0f       	add	r22, r18
    147c:	73 1f       	adc	r23, r19
    147e:	84 1f       	adc	r24, r20
    1480:	95 1f       	adc	r25, r21
    1482:	a0 1d       	adc	r26, r0
    1484:	08 95       	ret

00001486 <_exit>:
    1486:	f8 94       	cli

00001488 <__stop_program>:
    1488:	ff cf       	rjmp	.-2      	; 0x1488 <__stop_program>
